{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?3310","webpack:///./src/components/HelloWorld.vue?a21d","webpack:///./src/components/CodeEditor.vue?ca6f","webpack:///./src/App.vue?1336","webpack:///./src/components/HelloWorld.vue?7cfe","webpack:///./src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?d4cc","webpack:///./src/components/HelloWorld.vue?91b6","webpack:///./src/components/CodeEditor.vue?2e95","webpack:///./src/app/language/myLanguage.js","webpack:///./src/components/CodeEditor.vue?e84b","webpack:///./src/app/language/token.ts","webpack:///./src/components/CodeEditor.vue?2fb7","webpack:///./src/components/CodeEditor.vue?9af4","webpack:///./src/app/language/lexer.ts","webpack:///./src/app/language/parser.ts","webpack:///./src/app/language/symbol.ts","webpack:///./src/app/language/value.ts","webpack:///./src/app/language/interpreterFunctions/functions.ts","webpack:///./src/app/language/interpreter.ts","webpack:///./src/app/language/main.ts","webpack:///./src/App.vue","webpack:///./src/App.vue?c82e","webpack:///./src/App.vue?180a","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_HelloWorld_vue_vue_type_style_index_0_id_67d569a3_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_HelloWorld_vue_vue_type_style_index_0_id_67d569a3_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CodeEditor_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CodeEditor_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_05cf7592_render","_vm","this","_h","$createElement","_c","_self","attrs","id","on","running","execute","domProps","textContent","_s","consoleText","click","clear","_v","staticRenderFns","HelloWorldvue_type_template_id_67d569a3_scoped_true_render","staticClass","HelloWorldvue_type_template_id_67d569a3_scoped_true_staticRenderFns","HelloWorldvue_type_script_lang_ts_HelloWorld","_Vue","HelloWorld","_this","classCallCheck","code","consoleOutput","inherits","vue_property_decorator","tslib_es6","components","HelloWorldvue_type_script_lang_ts_","components_HelloWorldvue_type_script_lang_ts_","component","componentNormalizer","components_HelloWorld","CodeEditorvue_type_template_id_1bba2738_render","options","cmOptions","model","callback","$$v","expression","runCode","CodeEditorvue_type_template_id_1bba2738_staticRenderFns","CodeMirror","defineMode","config","parserConfig","type","content","indentUnit","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","style","A","B","D","atom","if","while","with","else","return","break","continue","new","func","for","true","false","null","class","super","isOperatorChar","isJsonldKeyword","readRegexp","stream","next","escaped","inSet","ret","tp","cont","tokenBase","state","ch","tokenize","tokenString","match","test","eat","tokenComment","skipToEnd","expressionAllowed","current","tokenQuasi","lexical","eatWhile","word","lastType","quote","peek","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","string","indexOf","start","exec","index","depth","sawSomething","pos","charAt","bracket","atomicTypes","number","variable","regexp","jsonld-keyword","JSLexical","indented","column","align","prev","info","inScope","varname","v","localVars","cx","context","vars","parseJS","cc","marked","combinator","pop","statement","lex","pass","arguments","inList","list","register","block","newContext","registerVarScoped","Var","globalVars","inner","Context","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","indent","outer","poplex","expect","wanted","exp","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typename","typeexpr","pattern","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","maybeTarget","me","expr","backUp","continueQuasi","targetNoComma","target","maybeTypeArgs","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","isContinuedStatement","textAfter","startState","basecolumn","esm_typeof","token","sol","indentation","eatSpace","Pass","top","firstChar","closing","doubleIndentSwitch","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","closeBrackets","helperType","skipExpression","registerHelper","defineMIME","CodeEditorvue_type_script_lang_ts_CodeEditor","CodeEditor","possibleConstructorReturn","getPrototypeOf","createClass","tabSize","theme","line","lineNumbers","$emit","$data","codemirror","vue_codemirror","TokenType","CodeEditorvue_type_script_lang_ts_","components_CodeEditorvue_type_script_lang_ts_","CodeEditor_component","components_CodeEditor","token_Token","Token","concat","tt","lexer_Lexer","Lexer","text","reservedKeywords","BOOL","IF","ELSE","FUNC","RET","FOR","WHILE","loop","LOOP","BREAK","CLASS","NEW","static","STATIC","init","INIT","_currentPos","currentLine","advance","CurrentPos","currentChar","undefined","isWhitespace","isAlpha","isInteger","foundReserved","ID","delimiter","CurrentChar","foundPoint","REAL","INT","isNewline","ignoreWhitespace","ignoreComment","NULL","STR","PLUSE","PLUSP","PLUS","MINUSE","MINUSP","ARROW","MINUS","MULE","MUL","POWE","POW","NEQ","NOT","LET","LT","GET","GT","DIV","LPAR","RPAR","LCUR","RCUR","COMMA","SEMI","DCOLON","COLON","DOT","QUEST","EQU","ASS","AND","OR","NL","integer","val","lexer","parser_tt","parser_Parser","Parser","currentToken","getNextToken","tokType","currentType","kind","statements","statementList","ex","withterm","ifstatement","classstatement","ternaryOp","forstatement","whilestatement","loopstatement","statementTerminator","assignment","varName","varType","initial","comp","cond","initializer","compar","inc","ini","incr","elseBlock","trueBlock","trueb","falseb","trueSta","params","parameters","retType","bl","funcBody","typeToken","declaration","_typeToken","comparison","trueSection","falseSection","compTypes","cToken","op","left","right","node","term","opToken","prod","postfix","factor","postFixOp","DIVE","addOP","one","addOperation","termOP","operation","memberV","inst","member","argList","fun","fuName","args","realTok","intTok","strTok","boolTok","notComp","idToken","funcexpression","reset","parser","symbol_Symbol","_Symbol","addressValue","isType","symbol_TypeSymbol","TypeSymbol","symbol_BuiltinTypeSymbol","symbol_VarSymbol","VarSymbol","symbol_FunctionType","FunctionType","paramTypes","_this3","newName","constructName","parameterNames","map","arg","x","y","join","symbol_FunctionSymbol","FunctionSymbol","symbol_SymbolTable","SymbolTable","types","parent","symbols","scopeName","level","foundSymbol","parentSymbol","findSymbol","sym","symbolExists","tname","value_Value","Value","address","references","important","ref","ind","value_FunctionValue","FunctionValue","scope","value_ClassValue","ClassValue","outerScope","_this2","classScope","value_InstanceValue","InstanceValue","molde","value_ValueTable","ValueTable","values","newAddress","lastInd","newVal","addNewFuncValue","addNewValue","removeReference","ptr","symTable","removeReferences","newValues","_key","greatestIndx","Number","compAny","a","b","sumAny","subAny","mulAny","divAny","interpreter_tt","interpreter_Interpreter","Interpreter","breaking","returning","callDepth","MAX_CALL_DEPTH","builtinTypes","int","double","bool","pointer","NullType","globalTable","currentScope","replScope","valueTable","nullVal","nullSym","addSymbol","visitDouble","visitInt","visitBool","visitStr","visitBinOp","visitUnaryOp","visitTernaryOp","visitIf","visitFor","visitWhile","visitLoop","visitBlock","visitVarDeclaration","visitVariable","visitAssignment","visitFuncExpr","visitFuncDecl","visitFuncCall","visitFuncBody","visitReturn","visitClass","visitClassBody","visitConstructorDecl","visitConstructorCall","visitInstanceBody","visitClassInitializer","visit","visitMemberVar","visitStaticVar","Error","Math","round","addedVal","leftVisited","rightVisited","leftVal","rightVal","createLiteral","toString","EQ","String","retuType","getParamTypes","typeName","typeOfFunc","newType","funcValue","newFunctionSymbol","addReference","ts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","param","ft","err","bodyScope","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","str","_i","_Object$keys","keys","exprFunc","fname","_console","_console2","funct","argsTaken","pow","_left","_result","_result2","sqrt","_arg","_result3","sin","_arg2","_result4","cos","mappedNodesP","console","log","toConsumableArray","mappedNodes","resolvedExpr","fVal","funcScope","calleeScope","newDecls","initValues","par","newValue","copyValue","_i2","dec","newVar","_result5","cleanUp","blockScope","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","st","condition","falseBlock","resultValue","initi","forScope","isBoolean","assign","valueReturn","type_","mem","varSym","memSym","getMemberVarSymbol","vSym","findFromPointer","instSym","variableSym","theValue","_newValue","symbolFound","add","setText","root","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","main_int","setupConsole","consRepl","currentConsole","evalCode","evaluated","interpret","use","vue_codemirror_default","Appvue_type_script_lang_ts_App","App","print","_len","Array","Appvue_type_script_lang_ts_","src_Appvue_type_script_lang_ts_","App_component","src_App","vue_runtime_esm","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.85371181.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=67d569a3&scoped=true&lang=sass&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=67d569a3&scoped=true&lang=sass&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeEditor.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeEditor.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('code-editor',{on:{\"running\":_vm.execute}}),_c('pre',{attrs:{\"id\":\"code-result\"},domProps:{\"textContent\":_vm._s(_vm.consoleText)}}),_c('div'),_c('button',{attrs:{\"id\":\"clear-button\"},on:{\"click\":_vm.clear}},[_vm._v(\"Clear\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator'\n\n@Component({\n  components: {}\n})\nexport default class HelloWorld extends Vue {\n  @Prop() private msg!: string\n  code: string = ''\n  consoleOutput = ''\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=67d569a3&scoped=true&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./HelloWorld.vue?vue&type=style&index=0&id=67d569a3&scoped=true&lang=sass&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"67d569a3\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',{attrs:{\"id\":\"code-section\"}},[_c('codemirror',{attrs:{\"id\":\"code-input\",\"options\":_vm.cmOptions},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}}),_c('br'),_c('button',{attrs:{\"id\":\"run-button\"},on:{\"click\":_vm.runCode}},[_vm._v(\"Run\")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\nimport CodeMirror from 'codemirror'\n\nCodeMirror.defineMode('myLang', function (config, parserConfig) {\n  const indentUnit = config.indentUnit\n  const statementIndent = parserConfig.statementIndent\n  const jsonldMode = parserConfig.jsonld\n  const jsonMode = parserConfig.json || jsonldMode\n  const isTS = parserConfig.typescript\n  const wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/\n\n  // Tokenizer\n\n  const keywords = (function () {\n    function kw (type) { return { type: type, style: 'keyword' } }\n    const A = kw('keyword a')\n    const B = kw('keyword b')\n    // const C = kw('keyword c')\n    const D = kw('keyword d')\n    // const operator = kw('operator')\n    const atom = { type: 'atom', style: 'atom' }\n\n    return {\n      if: kw('if'),\n      while: A,\n      with: A,\n      else: B,\n      // do: B,\n      // try: B,\n      // finally: B,\n      return: D,\n      break: D,\n      continue: D,\n      new: kw('new'),\n      // delete: C,\n      // void: C,\n      // throw: C,\n      // debugger: kw('debugger'),\n      // var: kw('var'),\n      // const: kw('var'),\n      // let: kw('var'),\n      func: kw('func'),\n      // catch: kw('catch'),\n      for: kw('for'),\n      // switch: kw('switch'),\n      // case: kw('case'),\n      // default: kw('default'),\n      // in: operator,\n      // typeof: operator,\n      // instanceof: operator,\n      true: atom,\n      false: atom,\n      null: atom,\n      // undefined: atom,\n      // NaN: atom,\n      // Infinity: atom,\n      this: kw('this'),\n      class: kw('class'),\n      super: kw('atom')\n      // yield: C,\n      // export: kw('export'),\n      // import: kw('import'),\n      // extends: C,\n      // await: C\n    }\n  }())\n\n  const isOperatorChar = /[+\\-*&%=<>!?|~^@]/\n  const isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/\n\n  function readRegexp (stream) {\n    let escaped = false\n    let next\n    let inSet = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next === '/' && !inSet) return\n        if (next === '[') inSet = true\n        else if (inSet && next === ']') inSet = false\n      }\n      escaped = !escaped && next === '\\\\'\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  let type, content\n  function ret (tp, style, cont) {\n    type = tp; content = cont\n    return style\n  }\n  function tokenBase (stream, state) {\n    const ch = stream.next()\n    if (ch === '\"' || ch === \"'\") {\n      state.tokenize = tokenString(ch)\n      return state.tokenize(stream, state)\n    } else if (ch === '.' && stream.match(/^\\d[\\d_]*(?:[eE][+-]?[\\d_]+)?/)) {\n      return ret('number', 'number')\n    } else if (ch === '.' && stream.match('..')) {\n      return ret('spread', 'meta')\n    } else if (ch === ':' && stream.match(':')) {\n      return ret('spread', 'meta')\n    } else if (/[[\\]{}(),;:.]/.test(ch)) {\n      return ret(ch)\n    } else if (ch === '=' && stream.eat('>')) {\n      return ret('=>', 'operator')\n    } else if (ch === '0' && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret('number', 'number')\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?/)\n      return ret('number', 'number')\n    } else if (ch === '/') {\n      if (stream.eat('*')) {\n        state.tokenize = tokenComment\n        return tokenComment(stream, state)\n      } else if (stream.eat('/')) {\n        stream.skipToEnd()\n        return ret('comment', 'comment')\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream)\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/)\n        return ret('regexp', 'string-2')\n      } else {\n        stream.eat('=')\n        return ret('operator', 'operator', stream.current())\n      }\n    } else if (ch === '`') {\n      state.tokenize = tokenQuasi\n      return tokenQuasi(stream, state)\n    } else if (ch === '#') {\n      stream.skipToEnd()\n      return ret('error', 'error')\n    } else if (isOperatorChar.test(ch)) {\n      if (ch !== '>' || !state.lexical || state.lexical.type !== '>') {\n        if (stream.eat('=')) {\n          if (ch === '!' || ch === '=') stream.eat('=')\n        } else if (/[<>*+-]/.test(ch)) {\n          stream.eat(ch)\n          if (ch === '>') stream.eat(ch)\n        }\n      }\n      return ret('operator', 'operator', stream.current())\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE)\n      const word = stream.current()\n      if (state.lastType !== '.') {\n        if (Object.prototype.hasOwnProperty.call(keywords, word)) {\n          const kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n      }\n      return ret('variable', 'variable', word)\n    }\n  }\n\n  function tokenString (quote) {\n    return function (stream, state) {\n      let escaped = false\n      let next\n      if (jsonldMode && stream.peek() === '@' && stream.match(isJsonldKeyword)) {\n        state.tokenize = tokenBase\n        return ret('jsonld-keyword', 'meta')\n      }\n      while ((next = stream.next()) != null) {\n        if (next === quote && !escaped) break\n        escaped = !escaped && next === '\\\\'\n      }\n      if (!escaped) state.tokenize = tokenBase\n      return ret('string', 'string')\n    }\n  }\n\n  function tokenComment (stream, state) {\n    let maybeEnd = false\n    let ch\n    /* eslint no-cond-assign: \"off\" */\n    while (ch = stream.next()) {\n      if (ch === '/' && maybeEnd) {\n        state.tokenize = tokenBase\n        break\n      }\n      maybeEnd = (ch === '*')\n    }\n    return ret('comment', 'comment')\n  }\n\n  function tokenQuasi (stream, state) {\n    let escaped = false\n    let next\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next === '`' || (next === '$' && stream.eat('{')))) {\n        state.tokenize = tokenBase\n        break\n      }\n      escaped = !escaped && next === '\\\\'\n    }\n    return ret('quasi', 'string-2', stream.current())\n  }\n\n  const brackets = '([{}])'\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow (stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null\n    let arrow = stream.string.indexOf('->', stream.start)\n    if (arrow < 0) return\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      const m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    let depth = 0\n    let sawSomething = false\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      const ch = stream.string.charAt(pos)\n      const bracket = brackets.indexOf(ch)\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break }\n        if (--depth === 0) { if (ch === '(') sawSomething = true; break }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth\n      } else if (wordRE.test(ch)) {\n        sawSomething = true\n      } else if (/[\"'/`]/.test(ch)) {\n        for (; ; --pos) {\n          if (pos === 0) return\n          const next = stream.string.charAt(pos - 1)\n          if (next === ch && stream.string.charAt(pos - 2) !== '\\\\') { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos\n        break\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos\n  }\n\n  // Parser\n\n  const atomicTypes = { atom: true, number: true, variable: true, string: true, regexp: true, this: true, 'jsonld-keyword': true }\n\n  function JSLexical (indented, column, type, align, prev, info) {\n    this.indented = indented\n    this.column = column\n    this.type = type\n    this.prev = prev\n    this.info = info\n    if (align != null) this.align = align\n  }\n\n  function inScope (state, varname) {\n    for (let v = state.localVars; v; v = v.next) {\n      if (v.name === varname) return true\n    }\n    for (let cx = state.context; cx; cx = cx.prev) {\n      for (let v = cx.vars; v; v = v.next) { if (v.name === varname) return true }\n    }\n  }\n\n  function parseJS (state, style, type, content, stream) {\n    var cc = state.cc\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream\n    cx.marked = null\n    cx.cc = cc\n    cx.style = style\n\n    if (!Object.prototype.hasOwnProperty.call(state.lexical, 'align')) { state.lexical.align = true }\n\n    while (true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement\n      if (combinator(type, content)) {\n        while (cc.length && cc[cc.length - 1].lex) { cc.pop()() }\n        if (cx.marked) return cx.marked\n        if (type === 'variable' && inScope(state, content)) return 'variable-2'\n        return style\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = { state: null, column: null, marked: null, cc: null }\n  function pass () {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i])\n  }\n  function cont () {\n    pass.apply(null, arguments)\n    return true\n  }\n  function inList (name, list) {\n    for (var v = list; v; v = v.next) if (v.name === name) return true\n    return false\n  }\n  function register (varname) {\n    var state = cx.state\n    cx.marked = 'def'\n    if (state.context) {\n      if (state.lexical.info === 'var' && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars)) { state.globalVars = new Var(varname, state.globalVars) }\n  }\n  function registerVarScoped (varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner === context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier (name) {\n    return name === 'public' || name === 'private' || name === 'protected' || name === 'abstract' || name === 'readonly'\n  }\n\n  // Combinators\n\n  function Context (prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var (name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var('this', new Var('arguments', null))\n  function pushcontext () {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext () {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  function popcontext () {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex (type, info) {\n    var result = function () {\n      var state = cx.state; var indent = state.indented\n      if (state.lexical.type === 'stat') indent = state.lexical.indented\n      else {\n        for (var outer = state.lexical; outer && outer.type === ')' && outer.align; outer = outer.prev) { indent = outer.indented }\n      }\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info)\n    }\n    result.lex = true\n    return result\n  }\n  function poplex () {\n    var state = cx.state\n    if (state.lexical.prev) {\n      if (state.lexical.type === ')') { state.indented = state.lexical.indented }\n      state.lexical = state.lexical.prev\n    }\n  }\n  poplex.lex = true\n\n  function expect (wanted) {\n    function exp (type) {\n      if (type === wanted) return cont()\n      else if (wanted === ';' || type === '}' || type === ')' || type === ']') return pass()\n      else return cont(exp)\n    };\n    return exp\n  }\n\n  function statement (type, value) {\n    if (type === 'var') return cont(pushlex('vardef', value), vardef, expect(';'), poplex)\n    if (type === 'keyword a') return cont(pushlex('form'), parenExpr, statement, poplex)\n    if (type === 'keyword b') return cont(pushlex('form'), statement, poplex)\n    if (type === 'keyword d') return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex('stat'), maybeexpression, expect(';'), poplex)\n    if (type === 'debugger') return cont(expect(';'))\n    if (type === '{') return cont(pushlex('}'), pushblockcontext, block, poplex, popcontext)\n    if (type === ';') return cont()\n    if (type === 'if') {\n      if (cx.state.lexical.info === 'else' && cx.state.cc[cx.state.cc.length - 1] === poplex) { cx.state.cc.pop()() }\n      return cont(pushlex('form'), parenExpr, statement, poplex, maybeelse)\n    }\n    if (type === 'function') return cont(functiondef)\n    if (type === 'for') return cont(pushlex('form'), forspec, statement, poplex)\n    if (type === 'class' || (isTS && value === 'interface')) {\n      cx.marked = 'keyword'\n      return cont(pushlex('form', type === 'class' ? type : value), className, poplex)\n    }\n    if (type === 'variable') {\n      if (isTS && value === 'declare') {\n        cx.marked = 'keyword'\n        return cont(statement)\n      } else if (isTS && (value === 'module' || value === 'enum' || value === 'type') && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = 'keyword'\n        if (value === 'enum') return cont(enumdef)\n        else if (value === 'type') return cont(typename, expect('operator'), typeexpr, expect(';'))\n        else return cont(pushlex('form'), pattern, expect('{'), pushlex('}'), block, poplex, poplex)\n      } else if (isTS && value === 'namespace') {\n        cx.marked = 'keyword'\n        return cont(pushlex('form'), expression, statement, poplex)\n      } else if (isTS && value === 'abstract') {\n        cx.marked = 'keyword'\n        return cont(statement)\n      } else {\n        return cont(pushlex('stat'), maybelabel)\n      }\n    }\n    if (type === 'switch') {\n      return cont(pushlex('form'), parenExpr, expect('{'), pushlex('}', 'switch'), pushblockcontext,\n        block, poplex, poplex, popcontext)\n    }\n    if (type === 'case') return cont(expression, expect(':'))\n    if (type === 'default') return cont(expect(':'))\n    if (type === 'catch') return cont(pushlex('form'), pushcontext, maybeCatchBinding, statement, poplex, popcontext)\n    if (type === 'export') return cont(pushlex('stat'), afterExport, poplex)\n    if (type === 'import') return cont(pushlex('stat'), afterImport, poplex)\n    if (type === 'async') return cont(statement)\n    if (value === '@') return cont(expression, statement)\n    return pass(pushlex('stat'), expression, expect(';'), poplex)\n  }\n  function maybeCatchBinding (type) {\n    if (type === '(') return cont(funarg, expect(')'))\n  }\n  function expression (type, value) {\n    return expressionInner(type, value, false)\n  }\n  function expressionNoComma (type, value) {\n    return expressionInner(type, value, true)\n  }\n  function parenExpr (type) {\n    if (type !== '(') return pass()\n    return cont(pushlex(')'), expression, expect(')'), poplex)\n  }\n  function expressionInner (type, value, noComma) {\n    if (cx.state.fatArrowAt === cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody\n      if (type === '(') return cont(pushcontext, pushlex(')'), commasep(funarg, ')'), poplex, expect('=>'), body, popcontext)\n      else if (type === 'variable') return pass(pushcontext, pattern, expect('=>'), body, popcontext)\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma\n    if (Object.prototype.hasOwnProperty.call(atomicTypes, type)) return cont(maybeop)\n    if (type === 'function') return cont(functiondef, maybeop)\n    if (type === 'class' || (isTS && value === 'interface')) { cx.marked = 'keyword'; return cont(pushlex('form'), classExpression, poplex) }\n    if (type === 'keyword c' || type === 'async') return cont(noComma ? expressionNoComma : expression)\n    if (type === '(') return cont(pushlex(')'), maybeexpression, expect(')'), poplex, maybeop)\n    if (type === 'operator' || type === 'spread') return cont(noComma ? expressionNoComma : expression)\n    if (type === '[') return cont(pushlex(']'), arrayLiteral, poplex, maybeop)\n    if (type === '{') return contCommasep(objprop, '}', null, maybeop)\n    if (type === 'quasi') return pass(quasi, maybeop)\n    if (type === 'new') return cont(maybeTarget(noComma))\n    if (type === 'import') return cont(expression)\n    return cont()\n  }\n  function maybeexpression (type) {\n    if (type.match(/[;})\\],]/)) return pass()\n    return pass(expression)\n  }\n\n  function maybeoperatorComma (type, value) {\n    if (type === ',') return cont(expression)\n    return maybeoperatorNoComma(type, value, false)\n  }\n  function maybeoperatorNoComma (type, value, noComma) {\n    var me = noComma === false ? maybeoperatorComma : maybeoperatorNoComma\n    var expr = noComma === false ? expression : expressionNoComma\n    if (type === '=>') return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext)\n    if (type === 'operator') {\n      if (/\\+\\+|--/.test(value) || (isTS && value === '!')) return cont(me)\n      if (isTS && value === '<' && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false)) { return cont(pushlex('>'), commasep(typeexpr, '>'), poplex, me) }\n      if (value === '?') return cont(expression, expect(':'), expr)\n      return cont(expr)\n    }\n    if (type === 'quasi') { return pass(quasi, me) }\n    if (type === ';') return\n    if (type === '(') return contCommasep(expressionNoComma, ')', 'call', me)\n    if (type === '.') return cont(property, me)\n    if (type === '[') return cont(pushlex(']'), maybeexpression, expect(']'), poplex, me)\n    if (isTS && value === 'as') { cx.marked = 'keyword'; return cont(typeexpr, me) }\n    if (type === 'regexp') {\n      cx.state.lastType = cx.marked = 'operator'\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi (type, value) {\n    if (type !== 'quasi') return pass()\n    if (value.slice(value.length - 2) !== '${') return cont(quasi)\n    return cont(expression, continueQuasi)\n  }\n  function continueQuasi (type) {\n    if (type === '}') {\n      cx.marked = 'string-2'\n      cx.state.tokenize = tokenQuasi\n      return cont(quasi)\n    }\n  }\n  function arrowBody (type) {\n    findFatArrow(cx.stream, cx.state)\n    return pass(type === '{' ? statement : expression)\n  }\n  function arrowBodyNoComma (type) {\n    findFatArrow(cx.stream, cx.state)\n    return pass(type === '{' ? statement : expressionNoComma)\n  }\n  function maybeTarget (noComma) {\n    return function (type) {\n      if (type === '.') return cont(noComma ? targetNoComma : target)\n      else if (type === 'variable' && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression)\n    }\n  }\n  function target (_, value) {\n    if (value === 'target') { cx.marked = 'keyword'; return cont(maybeoperatorComma) }\n  }\n  function targetNoComma (_, value) {\n    if (value === 'target') { cx.marked = 'keyword'; return cont(maybeoperatorNoComma) }\n  }\n  function maybelabel (type) {\n    if (type === ':') return cont(poplex, statement)\n    return pass(maybeoperatorComma, expect(';'), poplex)\n  }\n  function property (type) {\n    if (type === 'variable') { cx.marked = 'property'; return cont() }\n  }\n  function objprop (type, value) {\n    if (type === 'async') {\n      cx.marked = 'property'\n      return cont(objprop)\n    } else if (type === 'variable' || cx.style === 'keyword') {\n      cx.marked = 'property'\n      if (value === 'get' || value === 'set') return cont(getterSetter)\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt === cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false))) { cx.state.fatArrowAt = cx.stream.pos + m[0].length }\n      return cont(afterprop)\n    } else if (type === 'number' || type === 'string') {\n      cx.marked = jsonldMode ? 'property' : (cx.style + ' property')\n      return cont(afterprop)\n    } else if (type === 'jsonld-keyword') {\n      return cont(afterprop)\n    } else if (isTS && isModifier(value)) {\n      cx.marked = 'keyword'\n      return cont(objprop)\n    } else if (type === '[') {\n      return cont(expression, maybetype, expect(']'), afterprop)\n    } else if (type === 'spread') {\n      return cont(expressionNoComma, afterprop)\n    } else if (value === '*') {\n      cx.marked = 'keyword'\n      return cont(objprop)\n    } else if (type === ':') {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter (type) {\n    if (type !== 'variable') return pass(afterprop)\n    cx.marked = 'property'\n    return cont(functiondef)\n  }\n  function afterprop (type) {\n    if (type === ':') return cont(expressionNoComma)\n    if (type === '(') return pass(functiondef)\n  }\n  function commasep (what, end, sep) {\n    function proceed (type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type === ',') {\n        var lex = cx.state.lexical\n        if (lex.info === 'call') lex.pos = (lex.pos || 0) + 1\n        return cont(function (type, value) {\n          if (type === end || value === end) return pass()\n          return pass(what)\n        }, proceed)\n      }\n      if (type === end || value === end) return cont()\n      if (sep && sep.indexOf(';') > -1) return pass(what)\n      return cont(expect(end))\n    }\n    return function (type, value) {\n      if (type === end || value === end) return cont()\n      return pass(what, proceed)\n    }\n  }\n  function contCommasep (what, end, info) {\n    for (var i = 3; i < arguments.length; i++) { cx.cc.push(arguments[i]) }\n    return cont(pushlex(end, info), commasep(what, end), poplex)\n  }\n  function block (type) {\n    if (type === '}') return cont()\n    return pass(statement, block)\n  }\n  function maybetype (type, value) {\n    if (isTS) {\n      if (type === ':') return cont(typeexpr)\n      if (value === '?') return cont(maybetype)\n    }\n  }\n  function maybetypeOrIn (type, value) {\n    if (isTS && (type === ':' || value === 'in')) return cont(typeexpr)\n  }\n  function mayberettype (type) {\n    if (isTS && type === ':') {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW (_, value) {\n    if (value === 'is') {\n      cx.marked = 'keyword'\n      return cont()\n    }\n  }\n  function typeexpr (type, value) {\n    if (value === 'keyof' || value === 'typeof' || value === 'infer') {\n      cx.marked = 'keyword'\n      return cont(value === 'typeof' ? expressionNoComma : typeexpr)\n    }\n    if (type === 'variable' || value === 'void') {\n      cx.marked = 'type'\n      return cont(afterType)\n    }\n    if (value === '|' || value === '&') return cont(typeexpr)\n    if (type === 'string' || type === 'number' || type === 'atom') return cont(afterType)\n    if (type === '[') return cont(pushlex(']'), commasep(typeexpr, ']', ','), poplex, afterType)\n    if (type === '{') return cont(pushlex('}'), commasep(typeprop, '}', ',;'), poplex, afterType)\n    if (type === '(') return cont(commasep(typearg, ')'), maybeReturnType, afterType)\n    if (type === '<') return cont(commasep(typeexpr, '>'), typeexpr)\n  }\n  function maybeReturnType (type) {\n    if (type === '=>') return cont(typeexpr)\n  }\n  function typeprop (type, value) {\n    if (type === 'variable' || cx.style === 'keyword') {\n      cx.marked = 'property'\n      return cont(typeprop)\n    } else if (value === '?' || type === 'number' || type === 'string') {\n      return cont(typeprop)\n    } else if (type === ':') {\n      return cont(typeexpr)\n    } else if (type === '[') {\n      return cont(expect('variable'), maybetypeOrIn, expect(']'), typeprop)\n    } else if (type === '(') {\n      return pass(functiondecl, typeprop)\n    }\n  }\n  function typearg (type, value) {\n    if ((type === 'variable' && cx.stream.match(/^\\s*[?:]/, false)) || value === '?') return cont(typearg)\n    if (type === ':') return cont(typeexpr)\n    if (type === 'spread') return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType (type, value) {\n    if (value === '<') return cont(pushlex('>'), commasep(typeexpr, '>'), poplex, afterType)\n    if (value === '|' || type === '.' || value === '&') return cont(typeexpr)\n    if (type === '[') return cont(typeexpr, expect(']'), afterType)\n    if (value === 'extends' || value === 'implements') { cx.marked = 'keyword'; return cont(typeexpr) }\n    if (value === '?') return cont(typeexpr, expect(':'), typeexpr)\n  }\n  function maybeTypeArgs (_, value) {\n    if (value === '<') return cont(pushlex('>'), commasep(typeexpr, '>'), poplex, afterType)\n  }\n  function typeparam () {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault (_, value) {\n    if (value === '=') return cont(typeexpr)\n  }\n  function vardef (_, value) {\n    if (value === 'enum') { cx.marked = 'keyword'; return cont(enumdef) }\n    return pass(pattern, maybetype, maybeAssign, vardefCont)\n  }\n  function pattern (type, value) {\n    if (isTS && isModifier(value)) { cx.marked = 'keyword'; return cont(pattern) }\n    if (type === 'variable') { register(value); return cont() }\n    if (type === 'spread') return cont(pattern)\n    if (type === '[') return contCommasep(eltpattern, ']')\n    if (type === '{') return contCommasep(proppattern, '}')\n  }\n  function proppattern (type, value) {\n    if (type === 'variable' && !cx.stream.match(/^\\s*:/, false)) {\n      register(value)\n      return cont(maybeAssign)\n    }\n    if (type === 'variable') cx.marked = 'property'\n    if (type === 'spread') return cont(pattern)\n    if (type === '}') return pass()\n    if (type === '[') return cont(expression, expect(']'), expect(':'), proppattern)\n    return cont(expect(':'), pattern, maybeAssign)\n  }\n  function eltpattern () {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign (_type, value) {\n    if (value === '=') return cont(expressionNoComma)\n  }\n  function vardefCont (type) {\n    if (type === ',') return cont(vardef)\n  }\n  function maybeelse (type, value) {\n    if (type === 'keyword b' && value === 'else') return cont(pushlex('form', 'else'), statement, poplex)\n  }\n  function forspec (type, value) {\n    if (value === 'await') return cont(forspec)\n    if (type === '(') return cont(pushlex(')'), forspec1, poplex)\n  }\n  function forspec1 (type) {\n    if (type === 'var') return cont(vardef, forspec2)\n    if (type === 'variable') return cont(forspec2)\n    return pass(forspec2)\n  }\n  function forspec2 (type, value) {\n    if (type === ')') return cont()\n    if (type === ';') return cont(forspec2)\n    if (value === 'in' || value === 'of') { cx.marked = 'keyword'; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef (type, value) {\n    if (value === '*') { cx.marked = 'keyword'; return cont(functiondef) }\n    if (type === 'variable') { register(value); return cont(functiondef) }\n    if (type === '(') return cont(pushcontext, pushlex(')'), commasep(funarg, ')'), poplex, mayberettype, statement, popcontext)\n    if (isTS && value === '<') return cont(pushlex('>'), commasep(typeparam, '>'), poplex, functiondef)\n  }\n  function functiondecl (type, value) {\n    if (value === '*') { cx.marked = 'keyword'; return cont(functiondecl) }\n    if (type === 'variable') { register(value); return cont(functiondecl) }\n    if (type === '(') return cont(pushcontext, pushlex(')'), commasep(funarg, ')'), poplex, mayberettype, popcontext)\n    if (isTS && value === '<') return cont(pushlex('>'), commasep(typeparam, '>'), poplex, functiondecl)\n  }\n  function typename (type, value) {\n    if (type === 'keyword' || type === 'variable') {\n      cx.marked = 'type'\n      return cont(typename)\n    } else if (value === '<') {\n      return cont(pushlex('>'), commasep(typeparam, '>'), poplex)\n    }\n  }\n  function funarg (type, value) {\n    if (value === '@') cont(expression, funarg)\n    if (type === 'spread') return cont(funarg)\n    if (isTS && isModifier(value)) { cx.marked = 'keyword'; return cont(funarg) }\n    if (isTS && type === 'this') return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign)\n  }\n  function classExpression (type, value) {\n  // Class expressions may have an optional name.\n    if (type === 'variable') return className(type, value)\n    return classNameAfter(type, value)\n  }\n  function className (type, value) {\n    if (type === 'variable') { register(value); return cont(classNameAfter) }\n  }\n  function classNameAfter (type, value) {\n    if (value === '<') return cont(pushlex('>'), commasep(typeparam, '>'), poplex, classNameAfter)\n    if (value === 'extends' || value === 'implements' || (isTS && type === ',')) {\n      if (value === 'implements') cx.marked = 'keyword'\n      return cont(isTS ? typeexpr : expression, classNameAfter)\n    }\n    if (type === '{') return cont(pushlex('}'), classBody, poplex)\n  }\n  function classBody (type, value) {\n    if (type === 'async' ||\n      (type === 'variable' &&\n        (value === 'static' || value === 'get' || value === 'set' || (isTS && isModifier(value))) &&\n        cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = 'keyword'\n      return cont(classBody)\n    }\n    if (type === 'variable' || cx.style === 'keyword') {\n      cx.marked = 'property'\n      return cont(isTS ? classfield : functiondef, classBody)\n    }\n    if (type === 'number' || type === 'string') return cont(isTS ? classfield : functiondef, classBody)\n    if (type === '[') { return cont(expression, maybetype, expect(']'), isTS ? classfield : functiondef, classBody) }\n    if (value === '*') {\n      cx.marked = 'keyword'\n      return cont(classBody)\n    }\n    if (isTS && type === '(') return pass(functiondecl, classBody)\n    if (type === ';' || type === ',') return cont(classBody)\n    if (type === '}') return cont()\n    if (value === '@') return cont(expression, classBody)\n  }\n  function classfield (type, value) {\n    if (value === '?') return cont(classfield)\n    if (type === ':') return cont(typeexpr, maybeAssign)\n    if (value === '=') return cont(expressionNoComma)\n    var context = cx.state.lexical.prev; var isInterface = context && context.info === 'interface'\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport (type, value) {\n    if (value === '*') { cx.marked = 'keyword'; return cont(maybeFrom, expect(';')) }\n    if (value === 'default') { cx.marked = 'keyword'; return cont(expression, expect(';')) }\n    if (type === '{') return cont(commasep(exportField, '}'), maybeFrom, expect(';'))\n    return pass(statement)\n  }\n  function exportField (type, value) {\n    if (value === 'as') { cx.marked = 'keyword'; return cont(expect('variable')) }\n    if (type === 'variable') return pass(expressionNoComma, exportField)\n  }\n  function afterImport (type) {\n    if (type === 'string') return cont()\n    if (type === '(') return pass(expression)\n    return pass(importSpec, maybeMoreImports, maybeFrom)\n  }\n  function importSpec (type, value) {\n    if (type === '{') return contCommasep(importSpec, '}')\n    if (type === 'variable') register(value)\n    if (value === '*') cx.marked = 'keyword'\n    return cont(maybeAs)\n  }\n  function maybeMoreImports (type) {\n    if (type === ',') return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs (_type, value) {\n    if (value === 'as') { cx.marked = 'keyword'; return cont(importSpec) }\n  }\n  function maybeFrom (_type, value) {\n    if (value === 'from') { cx.marked = 'keyword'; return cont(expression) }\n  }\n  function arrayLiteral (type) {\n    if (type === ']') return cont()\n    return pass(commasep(expressionNoComma, ']'))\n  }\n  function enumdef () {\n    return pass(pushlex('form'), pattern, expect('{'), pushlex('}'), commasep(enummember, '}'), poplex, poplex)\n  }\n  function enummember () {\n    return pass(pattern, maybeAssign)\n  }\n\n  function isContinuedStatement (state, textAfter) {\n    return state.lastType === 'operator' || state.lastType === ',' ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0))\n  }\n\n  function expressionAllowed (stream, state, backUp) {\n    return (state.tokenize === tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[[{}(,;:]|=>)$/.test(state.lastType)) ||\n      (state.lastType === 'quasi' && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function (basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: 'sof',\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, 'block', false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: basecolumn || 0\n      }\n      if (parserConfig.globalVars && typeof parserConfig.globalVars === 'object') { state.globalVars = parserConfig.globalVars }\n      return state\n    },\n\n    token: function (stream, state) {\n      if (stream.sol()) {\n        if (!Object.hasOwnProperty.call(state.lexical, 'align')) { state.lexical.align = false }\n        state.indented = stream.indentation()\n        findFatArrow(stream, state)\n      }\n      if (state.tokenize !== tokenComment && stream.eatSpace()) return null\n      var style = state.tokenize(stream, state)\n      if (type === 'comment') return style\n      state.lastType = type === 'operator' && (content === '++' || content === '--') ? 'incdec' : type\n      return parseJS(state, style, type, content, stream)\n    },\n\n    indent: function (state, textAfter) {\n      if (state.tokenize === tokenComment) return CodeMirror.Pass\n      if (state.tokenize !== tokenBase) return 0\n      var firstChar = textAfter && textAfter.charAt(0); var lexical = state.lexical; var top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) {\n        for (var i = state.cc.length - 1; i >= 0; --i) {\n          var c = state.cc[i]\n          if (c === poplex) lexical = lexical.prev\n          else if (c !== maybeelse) break\n        }\n      }\n\n      /* eslint no-unmodified-loop-condition: \"off\" */\n      while ((lexical.type === 'stat' || lexical.type === 'form') &&\n        (firstChar === '}' || ((top = state.cc[state.cc.length - 1]) &&\n          (top === maybeoperatorComma || top === maybeoperatorNoComma) &&\n          !/^[,.=+\\-*:?[(]/.test(textAfter)))) { lexical = lexical.prev }\n      if (statementIndent && lexical.type === ')' && lexical.prev.type === 'stat') { lexical = lexical.prev }\n      var type = lexical.type; var closing = firstChar === type\n\n      if (type === 'vardef') return lexical.indented + (state.lastType === 'operator' || state.lastType === ',' ? lexical.info.length + 1 : 0)\n      else if (type === 'form' && firstChar === '{') return lexical.indented\n      else if (type === 'form') return lexical.indented + indentUnit\n      else if (type === 'stat') { return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0) } else if (lexical.info === 'switch' && !closing && parserConfig.doubleIndentSwitch !== false) { return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit) } else if (lexical.align) return lexical.column + (closing ? 0 : 1)\n      else return lexical.indented + (closing ? 0 : indentUnit)\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : '/*',\n    blockCommentEnd: jsonMode ? null : '*/',\n    blockCommentContinue: jsonMode ? null : ' * ',\n    lineComment: jsonMode ? null : '//',\n    fold: 'brace',\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? 'json' : 'javascript',\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function (state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top === expression || top === expressionNoComma) state.cc.pop()\n    }\n  }\n})\n\nCodeMirror.registerHelper('wordChars', 'javascript', /[\\w$]/)\n\nCodeMirror.defineMIME('text/javascript', 'javascript')\nCodeMirror.defineMIME('text/ecmascript', 'javascript')\nCodeMirror.defineMIME('application/javascript', 'javascript')\nCodeMirror.defineMIME('application/x-javascript', 'javascript')\nCodeMirror.defineMIME('application/ecmascript', 'javascript')\nCodeMirror.defineMIME('application/json', { name: 'javascript', json: true })\nCodeMirror.defineMIME('application/x-json', { name: 'javascript', json: true })\nCodeMirror.defineMIME('application/ld+json', { name: 'javascript', jsonld: true })\nCodeMirror.defineMIME('text/typescript', { name: 'javascript', typescript: true })\nCodeMirror.defineMIME('application/typescript', { name: 'javascript', typescript: true })\n","\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator'\n// @ts-ignore\nimport { codemirror } from 'vue-codemirror'\n// language js\nimport '../app/language/myLanguage.js'\n// theme css\nimport 'codemirror/theme/cobalt.css'\n\n@Component({\n  components: {\n    codemirror\n  }\n})\nexport default class CodeEditor extends Vue {\n  data () {\n    return {\n      code: '',\n      cmOptions: {\n        // codemirror options\n        tabSize: 4,\n        mode: 'myLang',\n        theme: 'cobalt',\n        line: true,\n        lineNumbers: true\n        // more codemirror options, 更多 codemirror 的高级配置...\n      }\n    }\n  }\n\n  runCode () {\n    this.$emit('running', this.$data.code)\n  }\n}\n","\nenum TokenType {\n  NULL = 'NULL', // empty token\n\n// Built in literals\n  REAL = 'REAL', // Floating Point number literal(e.g: 1.0, 2.0, 3.1415)\n  INT = 'INT', // Integer number literal  (e.g: 1, 2, 100)\n  BOOL = 'BOOL', // Boolean literal (e.g: true, false)\n  STR = 'STR', // String of text literal (e.g: 'Hello, world')\n\n  ID = 'ID', // Identifier (e.g: i, var1)\n\n  NL = 'NL', // Newline character (\\n)\n  COMMA = 'COMMA', // ,\n  SEMI = 'SEMI', // ;\n  COLON = 'COLON', // :\n\n  DOT = 'DOT',\n  DCOLON = 'DCOLON',\n  QUEST = 'QUEST', // ?\n\n  ARROW = 'ARROW', // ->\n\n// Operators\n  PLUS = 'PLUS', // +\n  PLUSE = 'PLUSE', // +=\n  PLUSP = 'PLUSP', // ++\n  MINUS = 'MINUS', // -\n  MINUSE = 'MINUSE', // -=\n  MINUSP = 'MINUSP', // --\n\n  MUL = 'MUL', // *\n  MULE = 'MULE', // *=\n  DIV = 'DIV', // /\n  DIVE = 'DIVE', // /=\n\n  AND = 'AND', // &&\n  OR = 'OR', // ||\n\n  POW = 'POW', // ^\n  POWE = 'POWE', // ^=\n\n  ASS = 'ASS', // =\n\n  EQU = 'EQU', // ==\n  NOT = 'NOT', // !\n  NEQ = 'NEQ', // !=\n  LT = 'LT', // <\n  GT = 'GT', // >\n  LET = 'LET', // <=\n  GET = 'GET', // >=\n\n// Delimiters\n  LPAR = 'LPAR', // (\n  RPAR = 'RPAR', // )\n  LCUR = 'LCUR', // {\n  RCUR = 'RCUR', // }\n  LBRA = 'LBRA', // [\n  RBRA = 'RBRA', // ]\n\n// Keywords\n// Represent their literal value\n  IF = 'IF',\n  ELSE = 'ELSE',\n  FUNC = 'FUNC',\n  RET = 'RET',\n  FOR = 'FOR',\n  WHILE = 'WHILE',\n  LOOP = 'LOOP',\n  BREAK = 'BREAK',\n\n  CLASS = 'CLASS',\n  INIT = 'INIT',\n  NEW = 'NEW',\n  STATIC = 'STATIC'\n}\n\nclass Token {\n  type: TokenType\n  value: string\n\n  constructor (type: TokenType, value: string) {\n    this.type = type\n    this.value = value\n  }\n\n  toString (): string {\n    return `Token(${this.type}, ${this.value})`\n  }\n}\n\nexport default Token\nexport { TokenType }\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeEditor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeEditor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CodeEditor.vue?vue&type=template&id=1bba2738&\"\nimport script from \"./CodeEditor.vue?vue&type=script&lang=ts&\"\nexport * from \"./CodeEditor.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CodeEditor.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Token, { TokenType } from './token'\n\nconst tt = TokenType\n\nclass Lexer {\n  text: string\n  private _currentPos: number\n  private currentChar: string\n  private currentLine: number\n  reservedKeywords: { [name: string]: Token } = {\n    'true': new Token(tt.BOOL, 'true'),\n    'false': new Token(tt.BOOL, 'false'),\n    'if': new Token(tt.IF, 'if'),\n    'else': new Token(tt.ELSE, 'else'),\n    'func': new Token(tt.FUNC, 'func'),\n    'return': new Token(tt.RET, 'return'),\n    'for': new Token(tt.FOR, 'for'),\n    'while': new Token(tt.WHILE, 'while'),\n    'loop': new Token(tt.LOOP, 'loop'),\n    'break': new Token(tt.BREAK, 'break'),\n    'class': new Token(tt.CLASS, 'class'),\n    'new': new Token(tt.NEW, 'new'),\n    'static': new Token(tt.STATIC, 'static'),\n    'init': new Token(tt.INIT, 'init')\n  }\n\n  set CurrentPos (val: number) {\n    this._currentPos = val\n  }\n\n  get CurrentPos (): number {\n    return this._currentPos\n  }\n\n  get CurrentChar (): string {\n    return this.currentChar\n  }\n\n  constructor (text: string) {\n    this.text = text\n    this._currentPos = -1\n    this.currentLine = 0\n    this.advance()\n  }\n\n  advance () {\n    this.CurrentPos++\n\n    if (this.CurrentPos >= this.text.length) {\n      this.currentChar = undefined\n    } else {\n      this.currentChar = this.text[this.CurrentPos]\n    }\n  }\n\n  isWhitespace (): boolean {\n    // eslint-disable-next-line\n    return this.currentChar && this.currentChar.match(/^\\s*$/) != undefined\n  }\n\n  isNewline (): boolean {\n    // eslint-disable-next-line\n    return this.currentChar && this.currentChar.match(/^\\r\\n|\\r|\\n/) != undefined\n  }\n\n  ignoreWhitespace () {\n    while (this.currentChar && this.isWhitespace()) {\n      this.advance()\n    }\n  }\n\n  ignoreComment () {\n    while (this.currentChar || this.currentChar) {\n      this.advance()\n    }\n  }\n\n  isAlpha (): boolean {\n    // eslint-disable-next-line\n    return this.currentChar.match(/^[\\w|_]$/) != undefined\n  }\n\n  id (): Token {\n    var result = ''\n\n    do {\n      result += this.currentChar\n      this.advance()\n    } while (!this.currentChar ? false\n      : (this.isAlpha() ||\n          this.isInteger()))\n\n    const foundReserved = this.reservedKeywords[result]\n    if (foundReserved) {\n      return foundReserved\n    }\n\n    return new Token(tt.ID, result)\n  }\n\n  string (): string {\n    const delimiter = this.CurrentChar\n    this.advance()\n    let result = ''\n\n    while (this.currentChar && this.currentChar !== delimiter) {\n      result += this.currentChar\n      this.advance()\n    }\n    this.advance()\n\n    return result\n  }\n\n  isInteger (): boolean {\n    // eslint-disable-next-line\n    return this.currentChar && this.currentChar.match(/^\\d*$/) != undefined\n  }\n\n  integer () {\n    let result = ''\n    while (this.currentChar && this.isInteger()) {\n      result += this.currentChar\n      this.advance()\n    }\n\n    return result\n  }\n\n  number (): Token {\n    let result = ''\n\n    let foundPoint = false\n\n    do {\n      if (this.currentChar === '.') {\n        foundPoint = true\n      }\n\n      result += this.currentChar\n      this.advance()\n    } while (this.isInteger() ||\n      (this.currentChar === '.' && !foundPoint))\n\n    if (foundPoint) {\n      return new Token(tt.REAL, result)\n    } else {\n      return new Token(tt.INT, result)\n    }\n  }\n\n  getNextToken (): Token {\n    if (this.isWhitespace() || this.isNewline()) {\n      this.advance()\n      this.ignoreWhitespace()\n    }\n\n    if (this.currentChar && this.currentChar === '#') {\n      this.advance()\n      this.ignoreComment()\n    }\n\n    if (this.currentChar === undefined) {\n      return new Token(tt.NULL, '')\n    }\n\n    if (this.isInteger()) {\n      return this.number()\n    } else if (this.isAlpha()) {\n      return this.id()\n    }\n\n    switch (this.currentChar) {\n      case '\"':\n      case '\\'':\n        return new Token(tt.STR, this.string())\n      case '+':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.PLUSE, '+=')\n        } else if (this.CurrentChar === '+') {\n          this.advance()\n          return new Token(tt.PLUSP, '++')\n        }\n\n        return new Token(tt.PLUS, '+')\n      case '-':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.MINUSE, '-=')\n        } else if (this.CurrentChar === '-') {\n          this.advance()\n          return new Token(tt.MINUSP, '--')\n        } else if (this.CurrentChar === '>') {\n          this.advance()\n          return new Token(tt.ARROW, '->')\n        }\n        return new Token(tt.MINUS, '-')\n      case '*':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.MULE, '*=')\n        }\n        return new Token(tt.MUL, '*')\n      case '^':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.POWE, '^=')\n        }\n        return new Token(tt.POW, '^')\n      case '!':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.NEQ, '!=')\n        }\n\n        return new Token(tt.NOT, '!')\n      case '<':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.LET, '<=')\n        }\n\n        return new Token(tt.LT, '<')\n      case '>':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.GET, '<=')\n        }\n\n        return new Token(tt.GT, '<')\n      case '/':\n        this.advance()\n        return new Token(tt.DIV, '/')\n      case '(':\n        this.advance()\n        return new Token(tt.LPAR, '(')\n      case ')':\n        this.advance()\n        return new Token(tt.RPAR, ')')\n      case '{':\n        this.advance()\n        return new Token(tt.LCUR, '{')\n      case '}':\n        this.advance()\n        return new Token(tt.RCUR, '}')\n      case ',':\n        this.advance()\n        return new Token(tt.COMMA, ',')\n      case ';':\n        this.advance()\n        return new Token(tt.SEMI, ';')\n      case ':':\n        this.advance()\n        if (this.CurrentChar === ':') {\n          this.advance()\n          return new Token(tt.DCOLON, '::')\n        }\n        return new Token(tt.COLON, ':')\n      case '.':\n        this.advance()\n        return new Token(tt.DOT, '.')\n      case '?':\n        this.advance()\n        return new Token(tt.QUEST, '?')\n      case '=':\n        this.advance()\n        if (this.CurrentChar === '=') {\n          this.advance()\n          return new Token(tt.EQU, '==')\n        }\n        return new Token(tt.ASS, '=')\n      case '&':\n        this.advance()\n        if (this.CurrentChar === '&') {\n          this.advance()\n          return new Token(tt.AND, '&&')\n        }\n        break\n      case '|':\n        this.advance()\n        if (this.CurrentChar === '|') {\n          this.advance()\n          return new Token(tt.OR, '||')\n        }\n        break\n      case '\\n':\n        this.advance()\n        this.currentLine += 1\n\n        return new Token(tt.NL, '\\n')\n      default:\n        break\n    }\n\n    if (this.isInteger()) {\n      return new Token(tt.INT, this.integer())\n    } else if (this.currentChar === '+') {\n      this.advance()\n      return new Token(tt.PLUS, '+')\n    } else if (this.currentChar === '-') {\n      this.advance()\n      return new Token(tt.MINUS, '-')\n    } else if (this.currentChar === '*') {\n      this.advance()\n      return new Token(tt.MUL, '*')\n    } else if (this.currentChar === '/') {\n      this.advance()\n      return new Token(tt.DIV, '/')\n    } else if (this.currentChar === '(') {\n      this.advance()\n      return new Token(tt.LPAR, '(')\n    } else if (this.currentChar === ')') {\n      this.advance()\n      return new Token(tt.RPAR, ')')\n    }\n\n    throw 'Syntax error. Unkwown character: \"' + this.currentChar + '\"'\n  }\n\n  reset () {\n    this._currentPos = -1\n    this.advance()\n  }\n}\n\nexport default Lexer\n","\nimport Lexer from './lexer'\nimport Token, { TokenType } from './token'\nimport AST from './ast'\n\nconst tt = TokenType\n\nclass Parser {\n  lexer: Lexer\n  currentToken: Token\n  get currentType (): TokenType {\n    return this.currentToken.type\n  }\n\n  constructor (text: string = '') {\n    this.lexer = new Lexer(text)\n    this.currentToken = this.lexer.getNextToken()\n  }\n\n  eat (tokType: TokenType) {\n    if (this.currentType === tokType) {\n      this.currentToken = this.lexer.getNextToken()\n    } else {\n      throw `Unexpected token: ${this.currentToken.type}. Expected ${tokType}`\n    }\n  }\n\n  statementTerminator () {\n    // const blockTerminator: TokenType[] = [tt.NULL, tt.RCUR, tt.RPAR]\n    // if (this.currentToken.type === tt.SEMI) {\n    this.eat(tt.SEMI)\n    // }\n    // else if (blockTerminator.indexOf(this.currentType) === -1) {\n    //   do {\n    //     this.eat(tt.NL)\n    //   } while (this.currentType === tt.NL)\n    // }\n  }\n\n  program (): AST {\n    let result = this.block()\n\n    if (this.currentType !== tt.NULL) {\n      throw `Unexpected token '${this.currentType}'.`\n    }\n\n    return result\n  }\n\n  block (): AST {\n    return { kind: 'Block', statements: this.statementList() }\n  }\n\n  statementList (): AST[] {\n    let result: AST[] = []\n\n    if (this.currentType === tt.RCUR) {\n      return result\n    }\n\n    while (this.currentType !== tt.NULL && this.currentToken.type !== tt.RCUR) {\n      result.push(this.statement())\n    }\n\n    return result\n  }\n\n  statement (withterm: boolean = true): AST {\n    let ex: AST\n    switch (this.currentToken.type) {\n      case tt.LCUR:\n        this.eat(tt.LCUR)\n        ex = this.block()\n        this.eat(tt.RCUR)\n        break\n      case tt.IF:\n        this.eat(tt.IF)\n        ex = this.ifstatement()\n        break\n      case tt.CLASS:\n        this.eat(tt.CLASS)\n        ex = this.classstatement()\n      // case tt.INIT:\n      //     this.eat(tt.INIT)\n      //     ex = this.cons()\n      case tt.FUNC:\n        this.eat(tt.FUNC)\n        ex = this.func()\n        break\n      case tt.RET:\n        this.eat(tt.RET)\n        let val = this.ternaryOp()\n        ex = { kind: 'Return', val: val }\n        break\n      case tt.FOR:\n        // debugger\n        this.eat(tt.FOR)\n        ex = this.forstatement()\n        break\n      case tt.WHILE:\n        this.eat(tt.WHILE)\n        ex = this.whilestatement()\n        break\n      case tt.LOOP:\n        this.eat(tt.LOOP)\n        ex = this.loopstatement()\n        break\n      case tt.BREAK:\n        this.eat(tt.BREAK)\n        ex = { kind: 'Break' }\n        if (withterm) {\n          this.statementTerminator()\n        }\n        break\n      case tt.STATIC:\n        this.eat(tt.STATIC)\n        ex = { kind: 'StaticStatement', statement: this.statement(false) }\n      case tt.NULL:\n      case tt.RCUR:\n      case tt.RPAR:\n        return { kind: 'NoOp' }\n      default:\n        ex = this.ternaryOp()\n        if (withterm) {\n          this.statementTerminator()\n        }\n    }\n\n    return ex\n  }\n\n  classstatement (): AST {\n    let name = this.currentToken\n    this.eat(tt.ID)\n\n    var inherits: Token = null\n\n    if (this.currentToken.type === tt.COLON) {\n      this.eat(tt.COLON)\n      inherits = this.currentToken\n      this.eat(tt.ID)\n    }\n\n    this.eat(tt.LCUR)\n    let body = this.classBody()\n    this.eat(tt.RCUR)\n\n    return { kind: 'Class', name: name, inherits: inherits, body: body }\n  }\n\n  classBody (): AST {\n    return { kind: 'ClassBody', statements: this.statementList() }\n  }\n\n  declaration (token: Token): AST {\n    const varName = this.currentToken\n    this.eat(tt.ID)\n\n    let assignment: AST\n\n    if (this.currentType === tt.ASS) {\n      this.eat(tt.ASS)\n      assignment = this.ternaryOp()\n    }\n\n    return {\n      kind: 'Declaration',\n      varType: token,\n      token: varName,\n      initial: assignment\n    }\n  }\n\n  whilestatement (): AST {\n    const comp = this.ternaryOp()\n\n    let body: AST\n    if (this.currentToken.type === tt.LCUR) {\n      this.eat(tt.LCUR)\n      body = this.block()\n      this.eat(tt.RCUR)\n    } else {\n      body = this.statement()\n    }\n\n    return { kind: 'While', cond: comp, body: body }\n  }\n\n  forstatement (): AST {\n    this.eat(tt.LPAR)\n    let initializer = this.statement()\n\n    let compar = this.ternaryOp()\n    this.statementTerminator()\n    let inc = this.statement(false)\n\n    this.eat(tt.RPAR)\n\n    let body: AST\n\n    if (this.currentToken.type === tt.LCUR) {\n      this.eat(tt.LCUR)\n      body = this.block()\n      this.eat(tt.RCUR)\n    } else {\n      body = this.statement()\n    }\n\n    return { kind: 'For', ini: initializer, cond: compar, incr: inc, body: body }\n  }\n\n  ifstatement (): AST {\n    const exp = this.ternaryOp()\n\n    if (this.currentToken.type === tt.LCUR) {\n      this.eat(tt.LCUR)\n\n      const trueBlock = this.block()\n      this.eat(tt.RCUR)\n\n      if (this.currentType === tt.ELSE) {\n        this.eat(tt.ELSE)\n\n        let elseBlock: AST\n\n        if (this.currentToken.type === tt.LCUR) {\n          this.eat(tt.LCUR)\n          elseBlock = this.block()\n          this.eat(tt.RCUR)\n        } else {\n          this.eat(tt.IF)\n          elseBlock = this.ifstatement()\n        }\n\n        return { kind: 'If', expression: exp, trueb: trueBlock, falseb: elseBlock }\n      }\n      return { kind: 'If', expression: exp, trueb: trueBlock, falseb: null }\n    } else {\n      let trueSta = this.statement()\n\n      return { kind: 'If', expression: exp, trueb: trueSta, falseb: null }\n    }\n  }\n\n  func (): AST {\n    let name = this.currentToken\n    this.eat(tt.ID)\n\n    this.eat(tt.LPAR)\n    let params = this.parameters()\n    this.eat(tt.RPAR)\n\n    var retType: Token = null\n    if (this.currentToken.type === tt.COLON) {\n      this.eat(tt.COLON)\n      retType = this.currentToken\n\n      this.eat(tt.ID)\n    }\n\n    this.eat(tt.LCUR)\n    let bl = this.funcBody()\n    this.eat(tt.RCUR)\n\n    return { kind: 'FuncDecl', token: name, params: params, retType: retType, body: bl }\n  }\n\n  parameters (): AST[] {\n    let params: AST[] = []\n\n    if (this.currentToken.type !== tt.RPAR) {\n      let typeToken = this.currentToken\n      this.eat(tt.ID)\n      params.push(this.declaration(typeToken))\n\n      while (this.currentType !== tt.RPAR) {\n        this.eat(tt.COMMA)\n        const typeToken = this.currentToken\n        this.eat(tt.ID)\n        params.push(this.declaration(typeToken))\n      }\n    }\n    return params\n  }\n\n  funcBody (): AST {\n    return { kind: 'FuncBody', statements: this.statementList() }\n  }\n\n  loopstatement (): AST {\n    let body: AST\n    if (this.currentToken.type === tt.LCUR) {\n      this.eat(tt.LCUR)\n      body = this.block()\n      this.eat(tt.RCUR)\n    } else {\n      body = this.statement()\n    }\n\n    return { kind: 'Loop', body: body }\n  }\n\n  ternaryOp (): AST {\n    let comp = this.comparison()\n\n    while (this.currentToken.type === tt.QUEST) {\n      this.eat(tt.QUEST)\n      const trueSection = this.comparison()\n\n      this.eat(tt.COLON)\n      const falseSection = this.comparison()\n\n      comp = { kind: 'TernaryOp', cond: comp, trueb: trueSection, falseb: falseSection }\n    }\n\n    return comp\n  }\n\n  comparison (): AST {\n    let ex = this.expression()\n\n    const compTypes = [tt.EQU, tt.NEQ, tt.GT, tt.LT, tt.LET, tt.GET]\n\n    while (compTypes.indexOf(this.currentToken.type) !== -1) {\n      let cToken = this.currentToken\n      this.eat(this.currentToken.type)\n      ex = { kind: 'BinOp', op: cToken, left: ex, right: this.expression() }\n    }\n\n    return ex\n  }\n\n  expression (): AST {\n    let node = this.term()\n\n    while ([tt.PLUS, tt.MINUS].indexOf(this.currentToken.type) !== -1) {\n      const opToken = this.currentToken\n      if (this.currentToken.type === tt.PLUS) {\n        this.eat(tt.PLUS)\n      } else {\n        this.eat(tt.MINUS)\n      }\n\n      node = {\n        kind: 'BinOp',\n        left: node,\n        op: opToken,\n        right: this.term()\n      }\n    }\n    return node\n  }\n\n  term (): AST {\n    let node = this.prod()\n\n    while ([tt.MUL, tt.DIV].indexOf(this.currentToken.type) !== -1) {\n      const opToken = this.currentToken\n      if (this.currentToken.type === tt.MUL) {\n        this.eat(tt.MUL)\n      } else {\n        this.eat(tt.DIV)\n      }\n\n      node = {\n        kind: 'BinOp',\n        left: node,\n        op: opToken,\n        right: this.prod()\n      }\n    }\n\n    return node\n  }\n\n  prod (): AST {\n    let node = this.postfix()\n\n    while (tt.POW === this.currentToken.type) {\n      const opToken = this.currentToken\n      this.eat(tt.POW)\n\n      node = {\n        kind: 'BinOp',\n        left: node,\n        op: opToken,\n        right: this.postfix()\n      }\n    }\n\n    return node\n  }\n\n  postfix (): AST {\n    let node = this.factor()\n    const postFixOp = [\n      tt.PLUSP, tt.MINUSP,\n      tt.PLUSE, tt.MINUSE, tt.MULE, tt.DIVE,\n      tt.DOT, tt.DCOLON,\n      tt.LPAR,\n      tt.ASS\n    ]\n\n    while (postFixOp.indexOf(this.currentToken.type) !== -1) {\n      switch (this.currentType) {\n        case tt.PLUSP:\n        case tt.MINUSP:\n          let addOP: Token\n          if (this.currentType === tt.PLUSP) {\n            addOP = new Token(tt.PLUS, '+')\n            this.eat(tt.PLUSP)\n          } else {\n            addOP = new Token(tt.MINUS, '-')\n            this.eat(tt.MINUSP)\n          }\n\n          let one = new Token(tt.INT, '1')\n          let addOperation: AST = { kind: 'BinOp', op: addOP, left: node, right: { kind: 'Int', token: one } }\n          node = { kind: 'Assignment', token: node, right: addOperation }\n          break\n        case tt.PLUSE:\n        case tt.MINUSE:\n        case tt.MULE:\n        case tt.DIVE:\n          let termOP: Token\n          switch (this.currentType) {\n            case tt.PLUSE:\n              termOP = new Token(tt.PLUS, '+')\n              this.eat(tt.PLUSE)\n              break\n            case tt.MINUSE:\n              termOP = new Token(tt.MINUS, '-')\n              this.eat(tt.MINUSE)\n              break\n            case tt.MULE:\n              termOP = new Token(tt.MUL, '*')\n              this.eat(tt.MULE)\n              break\n            default:\n              termOP = new Token(tt.DIV, '/')\n              this.eat(tt.DIVE)\n              break\n          }\n\n          let operation: AST = { kind: 'BinOp', op: termOP, left: node, right: this.ternaryOp() }\n          node = { kind: 'Assignment', token: node, right: operation }\n          break\n        case tt.DOT:\n          this.eat(tt.DOT)\n          let memberV = this.currentToken\n          this.eat(tt.ID)\n          node = { kind: 'MemberVar', inst: node, name: memberV }\n          break\n        case tt.DCOLON:\n          this.eat(tt.DCOLON)\n          let member = this.currentToken\n          this.eat(tt.ID)\n          node = { kind: 'StaticVar', inst: node, name: member }\n          break\n        case tt.LPAR:\n          this.eat(tt.LPAR)\n\n          var argList: AST[] = []\n\n          while (this.currentToken.type !== tt.RPAR) {\n            argList.push(this.ternaryOp())\n\n            // @ts-ignore\n            if (this.currentToken.type !== tt.RPAR) {\n              this.eat(tt.COMMA)\n            }\n          }\n\n          this.eat(tt.RPAR)\n          var name: Token\n          switch (node.kind) {\n            case 'Variable':\n              name = node.token\n            default:\n              break\n          }\n          node = { kind: 'FuncCall', fun: node, fuName: name, args: argList }\n          break\n        case tt.ASS:\n          this.eat(tt.ASS)\n          node = { kind: 'Assignment', token: node, right: this.ternaryOp() }\n          break\n        default:\n          break\n      }\n    }\n\n    return node\n  }\n\n  funcexpression (): AST {\n    this.eat(tt.LPAR)\n    let params = this.parameters()\n    this.eat(tt.RPAR)\n\n    this.eat(tt.ARROW)\n\n    var body: AST\n    if (this.currentToken.type === tt.LCUR) {\n      this.eat(tt.LCUR)\n      body = this.funcBody()\n      this.eat(tt.RCUR)\n    } else {\n      body = this.ternaryOp()\n    }\n\n    return { kind: 'FuncExpression', params: params, retType: null, body: body }\n  }\n\n  factor (): AST {\n    switch (this.currentToken.type) {\n      case tt.REAL:\n        const realTok = this.currentToken\n        this.eat(tt.REAL)\n        return { kind: 'Double', token: realTok }\n      case tt.INT:\n        const intTok = this.currentToken\n        this.eat(tt.INT)\n        return { kind: 'Int', token: intTok }\n      case tt.STR:\n        const strTok = this.currentToken\n        this.eat(tt.STR)\n        return { kind: 'Str', token: strTok }\n      case tt.BOOL:\n        const boolTok = this.currentToken\n        this.eat(tt.BOOL)\n        return { kind: 'Bool', token: boolTok }\n      case tt.NOT:\n        this.eat(tt.NOT)\n        const c = this.factor()\n        const notComp: AST = {\n          kind: 'BinOp',\n          op: new Token(tt.EQU, '==='),\n          left: c,\n          right: {\n            kind: 'Bool',\n            token: new Token(tt.BOOL, 'false')\n          }\n        }\n\n        return notComp\n      case tt.LPAR:\n        this.eat(tt.LPAR)\n        const exp = this.ternaryOp()\n        this.eat(tt.RPAR)\n        return exp\n      case tt.PLUS:\n      case tt.MINUS:\n        const op = this.currentToken\n        this.eat(op.type)\n        return { kind: 'UnaryOp', op: op, right: this.factor() }\n      // case tt.NEW:\n      //         this.eat(tt.NEW)\n      //         return this.newInitializer()\n      case tt.ID:\n        let idToken = this.currentToken\n        this.eat(tt.ID)\n\n        switch (this.currentToken.type) {\n          case tt.ID:\n            return this.declaration(idToken)\n          default:\n            break\n        }\n\n        return { kind: 'Variable', token: idToken }\n      case 'FUNC':\n        this.eat(tt.FUNC)\n        return this.funcexpression()\n      default:\n        return { kind: 'NoOp' }\n    }\n    // if(this.currentToken.type === tt.INT){\n    //     const intTok = this.currentToken\n    //     this.eat(tt.INT)\n    //     return {kind: 'Int', token: intTok}\n    // } else if (this.currentToken.type === tt.LPAR){\n    //     this.eat(tt.LPAR)\n    //     let expr = this.expression()\n    //     this.eat(tt.RPAR)\n    //     return expr\n    // } else {\n    //     throw 'Expected a factor.'\n    // }\n  }\n\n  setText (text: string) {\n    this.lexer.text = text\n    this.lexer.reset()\n\n    this.currentToken = this.lexer.getNextToken()\n  }\n}\n\nexport default Parser\n","let a = [2, true]\n\nexport default class Symbol {\n  type?: TypeSymbol\n  name: string\n  value?: number\n  isType: boolean\n\n  constructor (name: string, type: TypeSymbol = null, addressValue: number = null) {\n    this.name = name\n    this.type = type\n    this.isType = false\n    this.value = addressValue\n  }\n}\n\nclass TypeSymbol extends Symbol {\n  constructor (name: string, type: Symbol = null) {\n    super(name)\n    this.isType = true\n  }\n}\n\nclass BuiltinTypeSymbol extends TypeSymbol {}\n\nclass ClassSymbol extends TypeSymbol {\n  constructor (name: string, type: Symbol = null, addressValue: number = null) {\n    super(name)\n    this.value = addressValue\n  }\n}\n\nclass VarSymbol extends Symbol {\n  constructor (name: string, type: Symbol, addressValue: number = null) {\n    super(\n      name,\n      type,\n      addressValue\n    )\n  }\n}\n\nclass FunctionType extends TypeSymbol {\n  constructor (paramTypes: [TypeSymbol, boolean][], type?: TypeSymbol) {\n    let newName = FunctionType.constructName(paramTypes, type)\n\n    super(newName)\n    this.type = type\n  }\n\n  static constructName (paramTypes: [TypeSymbol, boolean][], type?: TypeSymbol): string {\n    const parameterNames = paramTypes.map((arg) => {\n      let x = arg[0]\n      let y = arg[1]\n      return x.name + (y ? '' : '?')\n    }).join(', ')\n\n    let name = `(${parameterNames})`\n\n    if (type) {\n      name += `: ${type.name}`\n    }\n\n    return name\n  }\n}\n\nclass FunctionSymbol extends Symbol {\n  constructor (name: string, type: FunctionType, addressValue: number = null) {\n    super(name, type, addressValue)\n  }\n}\n\nclass SymbolTable {\n  parent?: SymbolTable\n\n  symbols: { [name: string]: Symbol }\n\n  scopeName: string\n  level: number\n\n  constructor (name: string, types: { [name: string]: Symbol } = undefined, parent: SymbolTable = null) {\n    this.symbols = types || {}\n\n    this.parent = parent\n\n    this.scopeName = name\n    this.level = ((parent && parent.level) || -1) + 1\n  }\n\n  findSymbol (name: string): Symbol {\n    let foundSymbol = this.symbols[name]\n    if (foundSymbol) {\n      return foundSymbol\n    } else {\n      let parentSymbol = this.parent && this.parent.findSymbol(name)\n      if (parentSymbol) {\n        return parentSymbol\n      }\n    }\n\n    return null\n  }\n\n  addSymbol (sym: Symbol) {\n    if (this.symbolExists(sym.name)) {\n      throw `Invalid redefinition of symbol ${sym.name}.`\n    }\n\n    let tname = sym.type\n    if (tname) {\n      if (!tname.isType) {\n        throw `Symbol(identifier) '${tname.name}' is not a type`\n      }\n    }\n\n    this.symbols[sym.name] = sym\n  }\n\n  symbolExists (name: string): boolean {\n    return this.symbols[name] != null\n  }\n}\n\nexport { TypeSymbol, BuiltinTypeSymbol, SymbolTable, VarSymbol, FunctionType, FunctionSymbol, ClassSymbol }\n","import Symbol, { TypeSymbol, BuiltinTypeSymbol, SymbolTable, FunctionType, ClassSymbol } from './symbol'\nimport AST from './ast'\n\nclass Value {\n  type: TypeSymbol\n  value: any\n\n  address: number\n\n  references: Symbol[] = []\n\n  important: boolean = false\n\n  constructor (type: TypeSymbol, value: any, address: number) {\n    this.type = type\n    this.value = value\n    this.address = address\n  }\n\n  addReference (ref: Symbol) {\n    this.references.push(ref)\n  }\n\n  removeReference (ref: Symbol) {\n    let ind = this.references.indexOf(ref)\n    if (ind !== -1) {\n      this.references.splice(ind, 1)\n    }\n  }\n\n  toString (): string {\n    if (this.type instanceof BuiltinTypeSymbol) {\n      return `${this.value}`\n    }\n\n    return `<value> at: ${this.address}`\n  }\n}\n\nclass FunctionValue extends Value {\n  scope: SymbolTable\n  params: AST[]\n  constructor (type: FunctionType, scope: SymbolTable, value: AST, address: number, params: AST[]) {\n    super(type, value, address)\n    this.scope = scope\n    this.params = params\n  }\n\n  toString (): string {\n    return `<func ${this.type.name} at: ${this.address}>`\n  }\n}\n\nclass ClassValue extends Value {\n  outerScope: SymbolTable\n  classScope: SymbolTable\n  constructor (type: ClassSymbol, scope: SymbolTable, outerScope: SymbolTable, value: AST, address: number) {\n    super(type, value, address)\n    this.outerScope = outerScope\n    this.classScope = scope\n  }\n\n  toString (): string {\n    return `<Class: ${this.type.name} at: ${this.address}>`\n  }\n}\n\nclass InstanceValue extends Value {\n  molde: ClassValue\n  scope: SymbolTable\n  constructor (type: ClassSymbol, molde: ClassValue, scope: SymbolTable, address: number) {\n    super(type, 'instValue', address)\n    this.molde = molde\n    this.scope = scope\n  }\n\n  toString (): string {\n    return `<instance of ${this.type.name} at: ${this.address}>`\n  }\n}\n\nclass ValueTable {\n  values: { [key: number]: Value } = {}\n\n  get lastInd (): number {\n    let greatestIndx = -1\n    for (let value in this.values) {\n      if (Number(value) > greatestIndx) {\n        greatestIndx = Number(value)\n      }\n    }\n    return greatestIndx\n    // return this.values.sort({x, y in x.key < y.key}).last?.key ?? -1\n  }\n\n  init () {\n    this.values = {}\n  }\n\n  addNewValue (type: TypeSymbol, value: any): Value {\n    let newAddress = this.lastInd + 1\n\n    let val = new Value(type, value, newAddress)\n\n    this.values[newAddress] = val\n    return val\n  }\n\n  addNewFuncValue (type: FunctionType, value: AST, scope: SymbolTable, params: AST[]): Value {\n    let newAddress = this.lastInd + 1\n\n    let val = new FunctionValue(\n      type,\n      scope,\n      value,\n      newAddress,\n      params\n    )\n\n    this.values[newAddress] = val\n    return val\n  }\n\n  addNewClassValue (type: ClassSymbol, scope: SymbolTable, outerScope: SymbolTable, value: AST): Value {\n    let newAddress = this.lastInd + 1\n\n    let val = new ClassValue(\n      type,\n      scope,\n      outerScope,\n      value,\n      newAddress\n    )\n\n    this.values[newAddress] = val\n    return val\n  }\n\n  addNewInstanceValue (\n    type: ClassSymbol, molde: ClassValue, scope: SymbolTable)\n    : Value {\n    let newAddress = this.lastInd + 1\n\n    let val = new InstanceValue(\n      type,\n      molde,\n      scope,\n      newAddress\n    )\n\n    this.values[newAddress] = val\n    return val\n  }\n\n  copyValue (val: Value): Value {\n    let newVal: Value\n    if (val.type instanceof FunctionType && val instanceof FunctionValue) {\n      newVal = this.addNewFuncValue(\n        val.type,\n        val.value,\n        val.scope,\n        val.params\n      )\n    } else {\n      newVal = this.addNewValue(val.type, val.value)\n    }\n\n    return newVal\n  }\n\n  removeReferences (ref: Symbol) {\n    for (const key in this.values) {\n      const val = this.values[key]\n      if (val.references.indexOf(ref) !== -1) {\n        val.removeReference(ref)\n      }\n    }\n  }\n\n  findFromPointer (ptr: number): Value {\n    return this.values[ptr]\n  }\n\n  cleanUp (symTable: SymbolTable = undefined) {\n    if (symTable) {\n      for (const key in symTable.symbols) {\n        const ref = symTable.symbols[key]\n        this.removeReferences(ref)\n      }\n    }\n\n    const newValues: { [key: number]: Value } = {}\n    for (const key in this.values) {\n      const y = this.values[key]\n      if (y.references.length !== 0 || y.important) {\n        newValues[key] = y\n      }\n    }\n\n    this.values = newValues\n  }\n}\n\nexport default Value\nexport { ValueTable, InstanceValue, ClassValue, FunctionValue }\n","\nfunction compAny(a: any, b: any, test: (arg0: any, arg1: any) => boolean): boolean {\n    if (typeof a != typeof b) return false\n\n    return test(a, b)\n}\n\nfunction sumAnyString(a: any, b: any): string{\n    if(typeof a == \"string\" || typeof b == \"string\"){\n        return `${a}${b}`\n    }\n\n    return null\n}\n\nfunction sumAny(a: any, b: any): any{\n\n    return a+b\n}\n\nfunction subAny(a: any, b: any): any{\n    return a - b\n}\n\nfunction mulAny(a: any, b: any): any{\n    return a * b\n}\n\nfunction divAny(a: any, b: any): any{\n    if (a%1 != 0){\n        if(b%1 != 0){\n            return a / b\n        } else {\n            return a / b\n        }\n    } else {\n        if(b%1 != 0){\n            return a / b\n        } else {\n            return a / b\n        }\n    }\n\n    return null\n}\n\nfunction powAny(a: any, b: any): number{\n    return Number(a) ^ Number(b)\n}\n\n\nexport {compAny, sumAny, subAny, mulAny, divAny, powAny}","import Value, { ValueTable, InstanceValue, FunctionValue, ClassValue } from './value'\nimport Token, { TokenType } from './token'\nimport Parser from './parser'\nimport AST from './ast'\nimport Symbol, { SymbolTable, BuiltinTypeSymbol, VarSymbol, TypeSymbol, FunctionType, FunctionSymbol } from './symbol'\nimport { compAny, sumAny, subAny, mulAny, divAny, powAny } from './interpreterFunctions/functions'\n\nconst tt = TokenType\n\nexport default class Interpreter {\n  parser: Parser\n  valueTable: ValueTable\n  constructorParams: Value[]\n  globalTable: SymbolTable\n  currentScope: SymbolTable\n  replScope: SymbolTable\n  null: Value\n  breaking: boolean = false\n  returning: Value = null\n  callDepth: number = 0\n  MAX_CALL_DEPTH = 1000\n\n  constructor (code: string = '') {\n    this.parser = new Parser(code)\n\n    let builtinTypes = {\n      'int': new BuiltinTypeSymbol('int'),\n      'double': new BuiltinTypeSymbol('double'),\n      'string': new BuiltinTypeSymbol('string'),\n      'bool': new BuiltinTypeSymbol('bool'),\n      'pointer': new BuiltinTypeSymbol('pointer'),\n      'NullType': new TypeSymbol('NullType')\n    }\n\n    this.globalTable = new SymbolTable('global', builtinTypes)\n    this.currentScope = this.globalTable\n\n    this.replScope = new SymbolTable('repl', null, this.globalTable)\n\n    this.valueTable = new ValueTable()\n    let nullVal = this.valueTable.addNewValue(\n      builtinTypes['NullType'],\n      'null'\n    )\n\n    this.null = nullVal\n\n    let nullSym = new Symbol(\n      'null',\n      builtinTypes['NullType'],\n      nullVal.address\n    )\n\n    this.globalTable.addSymbol(nullSym)\n  }\n\n  visit (node: AST): Value {\n    switch (node.kind) {\n      // Normal types\n      case 'Double':\n        return this.visitDouble(node.token)\n      case 'Int':\n        return this.visitInt(node.token)\n      case 'Bool':\n        return this.visitBool(node.token)\n      case 'Str':\n        return this.visitStr(node.token)\n\n      // Operations\n      case 'BinOp':\n        return this.visitBinOp(node.op, node.left, node.right)\n      case 'UnaryOp':\n        return this.visitUnaryOp(node.op, node.right)\n      case 'NoOp':\n        return this.null\n\n      // Control Flow\n      case 'TernaryOp':\n        return this.visitTernaryOp(node.cond, node.trueb, node.falseb)\n      case 'If':\n        return this.visitIf(node.expression, node.trueb, node.falseb)\n      case 'For':\n        return this.visitFor(node.ini, node.cond, node.incr, node.body)\n      case 'While':\n        return this.visitWhile(node.cond, node.body)\n      case 'Loop':\n        return this.visitLoop(node.body)\n      case 'Break':\n        this.breaking = true\n        return this.null\n      case 'Block':\n        return this.visitBlock(node.statements)\n\n      // Variable Handling\n      case 'Declaration':\n        return this.visitVarDeclaration(node.varType, node.token, node.initial)\n      case 'Variable':\n        return this.visitVariable(node.token)\n      case 'Assignment':\n        return this.visitAssignment(node.token, node.right)\n\n      // Functions\n      case 'FuncExpression':\n        return this.visitFuncExpr(node.params, node.body, node.retType)\n      case 'FuncDecl':\n        return this.visitFuncDecl(node.token, node.params, node.body, node.retType)\n      case 'FuncCall':\n        return this.visitFuncCall(node.fun, node.args, node.fuName)\n      case 'FuncBody':\n        return this.visitFuncBody(node.statements)\n      case 'Return':\n        return this.visitReturn(node.val)\n      // Classes\n      case 'Class':\n        return this.visitClass(node.name, node.body, node.inherits)\n      case 'ClassBody':\n        return this.visitClassBody(node.statements)\n      case 'ConstructorDecl':\n        return this.visitConstructorDecl(node.body, node.params)\n      case 'ConstructorCall':\n        return this.visitConstructorCall(node.name)\n      case 'InstanceBody':\n        return this.visitInstanceBody(node.statements)\n      case 'ClassInitializer':\n        return this.visitClassInitializer(node.name, node.params)\n      case 'StaticStatement':\n        return this.visit(node.statement)\n      case 'MemberVar':\n        return this.visitMemberVar(node.inst, node.name)\n      case 'StaticVar':\n        return this.visitStaticVar(node.inst, node.name)\n    }\n  }\n\n  visitClass (name: Token, body: AST, inherits: Token): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitClassBody (statements: AST[]): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitConstructorDecl (body: AST, params: AST[]): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitConstructorCall (name: Token): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitInstanceBody (statements: AST[]): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitClassInitializer (name: Token, params: AST[]): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitMemberVar (inst: AST, name: Token): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  visitStaticVar (inst: AST, name: Token): Value {\n    throw new Error('Method not implemented.')\n  }\n\n  isBoolean (val: any) {\n    return typeof val === 'boolean' || (/true/i).test(val) === undefined\n  }\n\n  createLiteral (value: string, type: string): Value {\n    let val: any\n    switch (type) {\n      case 'double':\n        val = Number(value)\n        break\n      case 'int':\n        val = Math.round(Number(value))\n        break\n      case 'string':\n        val = value\n        break\n      case 'bool':\n        val = (/true/i).test(value)\n        break\n      default:\n        return this.null\n    }\n\n    if (val === null) {\n      throw `Token ${value} is not a valid value for type ${type}`\n    }\n\n    let addedVal = this.valueTable.addNewValue(\n      this.globalTable.findSymbol(type),\n      val\n    )\n\n    return addedVal\n  }\n\n  visitBinOp (op: Token, left: AST, right: AST): Value {\n    const leftVisited = this.visit(left)\n    const rightVisited = this.visit(right)\n\n    const leftVal = leftVisited.value\n    const rightVal = rightVisited.value\n\n    switch (op.type) {\n      case (tt.PLUS):\n        if ([leftVisited.type.name, rightVisited.type.name].indexOf('string') !== -1) {\n          return this.createLiteral(`${leftVal}${rightVal}`, 'string')\n        } else if (leftVisited.type === rightVisited.type) {\n          return this.createLiteral(sumAny(leftVal, rightVal).toString(), leftVisited.type.name)\n        } else {\n          throw 'Numeric adition must be with operands of same type.'\n        }\n      case (tt.MINUS):\n        if (leftVisited.type === rightVisited.type) {\n          return this.createLiteral(subAny(leftVal, rightVal).toString(), leftVisited.type.name)\n        } else {\n          throw 'Numeric substraction must be with operands of same type.'\n        }\n      case (tt.MUL):\n        if (leftVisited.type === rightVisited.type) {\n          return this.createLiteral(mulAny(leftVal, rightVal).toString(), leftVisited.type.name)\n        } else {\n          throw 'Numeric multiplication must be with operands of same type.'\n        }\n      case (tt.DIV):\n        if (leftVisited.type === rightVisited.type && leftVisited.type.name === 'double') {\n          return this.createLiteral(divAny(leftVal, rightVal).toString(), 'double')\n        } else {\n          throw 'Numeric division must be with operands of same type.'\n        }\n      case (tt.POW):\n        if (leftVisited.type === rightVisited.type) {\n          return this.createLiteral(subAny(leftVal, rightVal).toString(), leftVisited.type.name)\n        } else {\n          throw 'The exponential operator must be used with operands of same type.'\n        }\n      case (tt.EQU):\n        let EQ =\n          compAny(leftVal, rightVal, (x, y) => x === y) ||\n          leftVisited.address === rightVisited.address\n        return this.createLiteral(String(EQ), 'bool')\n      case (tt.NEQ):\n        let NEQ =\n          compAny(leftVal, rightVal, (x, y) => x !== y) &&\n          leftVisited.address !== rightVisited.address\n        return this.createLiteral(String(EQ), 'bool')\n      case (tt.LT):\n        let LT =\n          (typeof leftVal !== 'string' && typeof rightVal !== 'string') &&\n          compAny(leftVal, rightVal, (x, y) => x < y)\n        return this.createLiteral(String(LT), 'bool')\n      case (tt.GT):\n        let GT =\n          (typeof leftVal !== 'string' && typeof rightVal !== 'string') &&\n          compAny(leftVal, rightVal, (x, y) => x > y)\n        return this.createLiteral(String(GT), 'bool')\n      case (tt.LET):\n        let LET =\n          (typeof leftVal !== 'string' && typeof rightVal !== 'string') &&\n          compAny(leftVal, rightVal, (x, y) => x <= y)\n        return this.createLiteral(String(LET), 'bool')\n      case (tt.GET):\n        let GET =\n          (typeof leftVal !== 'string' && typeof rightVal !== 'string') &&\n          compAny(leftVal, rightVal, (x, y) => x >= y)\n        return this.createLiteral(String(GET), 'bool')\n      default:\n        return null\n    }\n  }\n\n  visitUnaryOp (op: Token, right: AST): Value {\n    const result = this.visit(right)\n    switch (op.type) {\n      case (tt.PLUS):\n        if (Math.round(result.value) === result.value) {\n          return this.createLiteral(String(result.value), 'int')\n        } else {\n          return this.createLiteral(String(result.value), 'double')\n        }\n      case (tt.MINUS):\n        if (Math.round(result.value) === result.value) {\n          return this.createLiteral(String(-result.value), 'int')\n        } else {\n          return this.createLiteral(String(-(result.value)), 'int')\n        }\n      case (tt.NOT):\n        if (!(!result.value) === result.value) {\n          return this.createLiteral(String(result.value), 'bool')\n        } else {\n          throw 'Expected a bool operand for operator NOT'\n        }\n      default:\n        return this.null\n    }\n  }\n\n  visitFuncExpr (params: AST[], body: AST, retType?: Token): Value {\n    // eslint-disable-next-line\n    let retuType = (retType == null) ? null : this.currentScope.findSymbol(retType.value)\n\n    let paramTypes = this.getParamTypes(\n      params\n    )\n\n    let typeName = FunctionType.constructName(\n      paramTypes,\n      retuType\n    )\n\n    var typeOfFunc: FunctionType = this.globalTable.findSymbol(\n      typeName\n    )\n\n    if (!typeOfFunc) {\n      let newType = new FunctionType(\n        paramTypes,\n        retuType\n      )\n\n      this.globalTable.addSymbol(newType)\n      typeOfFunc = newType\n    }\n\n    let funcValue = this.valueTable\n      .addNewFuncValue(\n        typeOfFunc,\n        body,\n        this.currentScope,\n        params\n      )\n\n    return funcValue\n  }\n\n  visitFuncDecl (name: Token, params: AST[], body: AST, retType?: Token): Value {\n    if (this.currentScope.symbolExists(name.value)) {\n      throw `Redefinition of symbol ${name.value}`\n    } else {\n      const retuType = (retType == null) ? null : this.currentScope.findSymbol(retType!.value)\n\n      let paramTypes = this.getParamTypes(\n        params\n      )\n\n      let typeName = FunctionType.constructName(\n        paramTypes,\n        retuType\n      )\n\n      var typeOfFunc = this.globalTable.findSymbol(\n        typeName\n      )\n\n      if (typeOfFunc == null) {\n        let newType = new FunctionType(\n          paramTypes,\n          retuType\n        )\n\n        this.globalTable.addSymbol(newType)\n        typeOfFunc = newType\n      }\n\n      let funcValue = this.valueTable\n        .addNewFuncValue(\n          typeOfFunc,\n          body,\n          this.currentScope,\n          params\n        )\n\n      let newFunctionSymbol = new FunctionSymbol(\n        name.value,\n        typeOfFunc!,\n        funcValue.address\n      )\n      funcValue.addReference(newFunctionSymbol)\n\n      this.currentScope.addSymbol(newFunctionSymbol)\n    }\n\n    return null\n  }\n\n  getParamTypes (params: AST[]): [TypeSymbol, boolean][] {\n    var ts: [TypeSymbol, boolean][] = []\n    for (let param of params) {\n      switch (param.kind) {\n        case 'Declaration':\n          const ft = this.currentScope.findSymbol(param.varType.value)\n          if (ft) {\n            // eslint ignore-next-line\n            ts.push([ft, param.initial == null])\n          } else {\n            throw `Unknown type ${param.varType.value}.`\n          }\n          break\n        default:\n          throw 'Expected parameter declaration inside function parentesis.'\n      }\n    }\n\n    return ts\n  }\n\n  visitFuncBody (statements: AST[]): Value {\n    let bodyScope = new SymbolTable('func-body-scope', null, this.currentScope)\n    this.currentScope = bodyScope\n\n    for (let str of statements) {\n      this.visit(str)\n      if (this.returning) {\n        break\n      }\n    }\n\n    for (let b of Object.keys(bodyScope.symbols)) {\n      this.valueTable.removeReferences(bodyScope.symbols[b])\n    }\n\n    this.currentScope = bodyScope.parent\n\n    let ret = this.returning\n    this.returning = null\n    return ret || this.null\n  }\n\n  visitFuncCall (exprFunc: AST, args: AST[], fname?: Token): Value {\n    if (this.callDepth >= this.MAX_CALL_DEPTH) {\n      throw 'Max call stack depth exceeded'\n    }\n\n    let funct = fname\n    if (funct) {\n      var argsTaken = -1\n      switch (funct.value) {\n        case 'pow':\n          if (args.length === 2) {\n            let left = this.visit(args[0])\n            let right = this.visit(args[1])\n            let result = Math.pow(left.value, right.value)\n            return this.valueTable.addNewValue(\n              this.globalTable.findSymbol('double'),\n              result\n            )\n          } else if (args.length === 1) {\n            let left = this.visit(args[0])\n            let result = Math.pow(left.value, 2)\n            return this.valueTable.addNewValue(\n              this.globalTable.findSymbol('double'),\n              result\n            )\n          } else {\n            argsTaken = 2\n            break\n          }\n        case 'sqrt':\n          if (args.length === 1) {\n            let arg = this.visit(args[0])\n            let result = Math.sqrt(arg.value)\n            return this.valueTable.addNewValue(\n              this.globalTable.findSymbol('double'),\n              result\n            )\n          } else {\n            argsTaken = 1\n          }\n          break\n        case 'sin':\n          if (args.length === 1) {\n            let arg = this.visit(args[0])\n            let result = Math.sin(arg.value)\n            return this.valueTable.addNewValue(\n              this.globalTable.findSymbol('double'),\n              result\n            )\n          } else {\n            argsTaken = 1\n          }\n          break\n        case 'cos':\n          if (args.length === 1) {\n            let arg = this.visit(args[0])\n            let result = Math.cos(arg.value)\n            return this.valueTable.addNewValue(\n              this.globalTable.findSymbol('double'),\n              result\n            )\n          } else {\n            argsTaken = 1\n          }\n          break\n        case 'println':\n          let mappedNodesP = args.map(x => this.visit(x).toString())\n\n          console.log(...mappedNodesP, '\\n')\n          return this.null\n        case 'print':\n          let mappedNodes = args.map(x => this.visit(x).toString())\n\n          console.log(...mappedNodes)\n          return this.null\n        // case 'read':\n        //     if (args.length == 1) {\n        //         console.log(this.visit(args[0]).value)\n        //     } else if (args.length != 0) {\n        //         argsTaken = 1\n        //         break\n        //     } else {\n        //         print(\"> \")\n        //     }\n        //     return create_literal(value: readLine() ?? \"\", type: \"double\")\n        default:\n          argsTaken = -1\n      }\n\n      if (argsTaken !== -1) {\n        throw `Error: The funcion ${funct.value} takes ${argsTaken} arguments.`\n      }\n    }\n\n    const resolvedExpr = this.visit(exprFunc)\n    const fVal: FunctionValue = resolvedExpr as FunctionValue\n    if (fVal) {\n      const funcScope = new SymbolTable('func-scope', null, fVal.scope)\n      const calleeScope = this.currentScope\n\n      let newDecls: AST[] = []\n      let initValues: [Token, Value][] = []\n      for (let i = 0; i < args.length; i++) {\n        let par = fVal.params[i]\n        if (args.length > i) {\n          switch (par.kind) {\n            case 'Declaration':\n              let newValue = this.visit(args[i])\n\n              if (newValue.type instanceof BuiltinTypeSymbol) {\n                newValue = this.valueTable.copyValue(newValue)\n              }\n\n              initValues.push([par.token, newValue])\n            default:\n              break\n          }\n        }\n\n        newDecls.push(par)\n      }\n\n      this.currentScope = funcScope\n      this.callDepth += 1\n\n      for (let i = 0; i < newDecls.length; i++) {\n        let dec = newDecls[i]\n        this.visit(dec)\n\n        if (i < initValues.length) {\n          let newVar = this.currentScope.findSymbol(initValues[i][0].value)\n          newVar.value = initValues[i][1].address\n          initValues[i][1].addReference(newVar)\n        }\n      }\n\n      let result = this.visit(fVal.value)\n      this.valueTable.cleanUp(funcScope)\n      result && (result.important = false)\n      this.currentScope = calleeScope\n      this.callDepth -= 1\n      return result\n    } else {\n      throw `Error: Undefined function ${fname.value}`\n    }\n  }\n\n  visitReturn (val: AST): Value {\n    let ret = this.visit(val)\n    this.returning = ret\n    this.returning && (this.returning.important = true)\n    return this.null\n  }\n\n  visitBlock (statements: AST[]): Value {\n    let blockScope = new SymbolTable('block_scope', null, this.currentScope)\n    this.currentScope = blockScope\n\n    for (let st of statements) {\n      this.visit(st)\n\n      if (this.breaking || this.returning !== null) {\n        break\n      }\n    }\n\n    this.currentScope = blockScope.parent\n    this.valueTable.cleanUp(blockScope)\n\n    return this.null\n  }\n\n  visitTernaryOp (cond: AST, trueb: AST, falseb: AST): Value {\n    const condition = this.visit(cond)\n    if (condition.type === this.globalTable.findSymbol('bool')) {\n      if (condition.value) {\n        return this.visit(trueb)\n      } else {\n        return this.visit(falseb)\n      }\n    } else {\n      throw 'Required boolean expression as condition for ternary operand.'\n    }\n  }\n\n  visitIf (expression: AST, trueBlock: AST, falseBlock?: AST): Value {\n    const condition = this.visit(expression)\n    if (condition.type === this.globalTable.findSymbol('bool')) {\n      if (condition.value) {\n        return this.visit(trueBlock)\n      } else if (falseBlock) {\n        return this.visit(falseBlock)\n      }\n    } else {\n      throw 'Required boolean expression as condition for if statement.'\n    }\n\n    return this.null\n  }\n\n  visitLoop (body: AST): Value {\n    while (true) {\n      this.visit(body)\n      if (this.breaking) {\n        this.breaking = false\n        break\n      }\n    }\n\n    return this.null\n  }\n\n  visitWhile (comp: AST, body: AST): Value {\n    let result = this.visit(comp)\n    let resultValue = result.value\n    if (result.type !== this.globalTable.findSymbol('bool')) {\n      throw 'The comparison expression on a while loop must resolve to type bool.'\n    }\n\n    while (resultValue) {\n      this.visit(body)\n      if (this.breaking) {\n        this.breaking = false\n        break\n      }\n\n      resultValue = this.visit(comp).value\n    }\n\n    return this.null\n  }\n\n  visitFor (initi: AST, comp: AST, inc: AST, body: AST): Value {\n    let forScope = new SymbolTable('for:loop', null, this.currentScope)\n    this.currentScope = forScope\n\n    this.visit(initi)\n    let resultValue = this.visit(comp).value\n\n    if (!this.isBoolean(resultValue)) {\n      throw 'The comparison expression on a for loop must resolve to type bool.'\n    }\n    while (resultValue) {\n      this.visit(body)\n      if (this.breaking) {\n        this.breaking = false\n        break\n      }\n\n      this.visit(inc)\n      resultValue = this.visit(comp).value\n    }\n\n    this.currentScope = forScope.parent!\n    this.valueTable.cleanUp(forScope)\n\n    return this.null\n  }\n\n  visitVarDeclaration (type: Token, name: Token, assign?: AST): Value {\n    if (this.currentScope.symbolExists(name.value)) {\n      throw `Duplicate variable: ${name.value}`\n    } else {\n      let type_ = this.currentScope.findSymbol(type.value)\n      if (!type_) {\n        throw `Unkown identifier ${type.value}.'`\n      }\n\n      let newVar: VarSymbol\n      let valueReturn: Value\n\n      if (assign) {\n        var newValue = this.visit(assign)\n\n        if (newValue.type instanceof BuiltinTypeSymbol) {\n          newValue = this.valueTable.copyValue(newValue)\n        }\n\n        newVar = new VarSymbol(\n          name.value,\n          type_,\n          newValue.address\n        )\n\n        newValue.addReference(newVar)\n\n        valueReturn = newValue\n      } else {\n        newVar = new VarSymbol(\n          name.value,\n          type_\n        )\n\n        valueReturn = this.null\n      }\n\n      this.currentScope.addSymbol(newVar)\n\n      return valueReturn\n    }\n  }\n\n  getMemberVarSymbol (mem: AST): Symbol {\n    var varSym: Symbol = null\n    switch (mem.kind) {\n      case 'Variable':\n        varSym = this.currentScope.findSymbol(mem.token.value)\n        break\n      case 'MemberVar':\n        let memSym = this.getMemberVarSymbol(mem.inst)\n        let vSym = this.valueTable.findFromPointer(memSym.value || 0)\n        if (vSym instanceof InstanceValue) {\n          varSym = vSym.scope.findSymbol(mem.name.value)\n        } else {\n          throw `Not a valid instance ${memSym.name}`\n        }\n        break\n      case 'StaticVar':\n        let instSym = this.getMemberVarSymbol(mem.inst)\n        let variableSym = this.valueTable.findFromPointer(instSym.value || 0)\n        if (variableSym instanceof InstanceValue) {\n          varSym = variableSym.scope.findSymbol(mem.name.value)\n        } else if (variableSym instanceof ClassValue) {\n          varSym = variableSym.classScope.findSymbol(mem.name.value)\n        } else {\n          throw `Not a valid instance ${instSym.name}`\n        }\n        break\n      default:\n        break\n    }\n\n    return varSym\n  }\n\n  visitAssignment (expr: AST, val: AST): Value {\n    let result = this.visit(val)\n\n    let varSym = this.getMemberVarSymbol(expr)\n\n    let addressValue = varSym.value\n\n    if (addressValue) {\n      let theValue = this.valueTable.findFromPointer(addressValue)\n\n      let newValue = result\n\n      if (theValue) theValue.removeReference(varSym)\n\n      if (newValue.type instanceof BuiltinTypeSymbol) {\n        newValue = this.valueTable.addNewValue(result.type, result.value)\n      }\n\n      varSym.value = newValue.address\n\n      newValue.addReference(varSym)\n    } else {\n      let newValue = result\n\n      if (newValue.type instanceof BuiltinTypeSymbol) {\n        newValue = this.valueTable.addNewValue(result.type, result.value)\n      }\n\n      varSym.value = newValue.address\n      newValue.addReference(varSym)\n    }\n\n    return result\n  }\n\n  visitVariable (token: Token): Value {\n    let symbolFound = this.currentScope.findSymbol(token.value)\n    if (symbolFound) {\n      let add = symbolFound.value\n      if (add) {\n        let val = this.valueTable.findFromPointer(add)\n\n        return val || this.null\n      } else {\n        return this.null\n      }\n    } else {\n      throw `NameError: Variable named ${token.value} wasn't found.`\n    }\n  }\n\n  visitDouble (token: Token): Value {\n    let val = this.createLiteral(token.value, 'double')\n    return val\n  }\n\n  visitInt (token: Token): Value {\n    return this.createLiteral(token.value, 'int')\n  }\n\n  visitBool (token: Token): Value {\n    return this.createLiteral(token.value, 'bool')\n  }\n\n  visitStr (token: Token): Value {\n    return this.createLiteral(token.value, 'string')\n  }\n\n  eval (text: string): any {\n    this.parser.setText(text)\n\n    this.currentScope = this.replScope\n    let root = this.parser.statementList()\n\n    var result: Value = null\n\n    for (const node of root) {\n      result = this.visit(node)\n    }\n\n    this.currentScope = this.globalTable\n\n    // eslint-disable-next-line\n    return (result && result.value != undefined) ? result.value : 'null'\n  }\n\n  interpret (text: string): any {\n    this.parser.setText(text)\n\n    this.currentScope = new SymbolTable('interpret-scope', null, this.currentScope)\n    let root = this.parser.statementList()\n\n    var result: Value = null\n\n    for (const node of root) {\n      result = this.visit(node)\n    }\n\n    this.currentScope = this.globalTable\n\n    // eslint-disable-next-line\n    return (result && result.value != undefined) ? result.value : 'null'\n  }\n}\n","\nimport Parser from './parser'\nimport Interpreter from './interpreter'\n\nconst int = new Interpreter()\n\nfunction setupConsole (consRepl: any) {\n  const currentConsole = window.console.log\n\n  window.console.log = (...args) => {\n    consRepl(...args)\n    currentConsole(...args)\n  }\n}\n\nfunction main () {\n  addEventListener('load', () => {\n    let bRun = document.querySelector('#run-button')\n    if (bRun) {\n      bRun.addEventListener('click', () => {\n        runCode()\n      })\n    }\n  })\n}\n\nfunction parseHTML (code: string): string {\n  const par = new Parser(code)\n\n  const ast = par.program()\n\n  const result = JSON.stringify(ast, null, 4)\n\n  return result\n}\n\nfunction runCode () {\n  let inp = <HTMLInputElement>document.querySelector('#code-input')\n  let code = inp.value\n  let result = parseHTML(code)\n\n  let resultDiv = document.querySelector('#result-code')\n  resultDiv && (resultDiv.innerHTML = result)\n}\n\nfunction evalCode (code: string): string {\n  const evaluated = int.interpret(code)\n\n  return evaluated\n}\n\nexport default main\nexport {\n  evalCode,\n  setupConsole\n}\n","\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\n// @ts-ignore\nimport VueCodemirror from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport HelloWorld from './components/HelloWorld.vue'\nimport CodeEditor from './components/CodeEditor.vue'\nimport { evalCode, setupConsole } from '@/app/language/main'\n\nVue.use(VueCodemirror)\n\n@Component({\n  components: {\n    HelloWorld,\n    CodeEditor\n  }\n})\n\nexport default class App extends Vue {\n  consoleText = 'console:\\n'\n\n  mounted () {\n    setupConsole(this.print)\n  }\n\n  execute (param: string) {\n    // const prevTime = performance.now()\n    console.log('\\n\\n**************\\n\\n')\n    const result = evalCode(param)\n\n    // console.log('\\nThe process took: ', performance.now() - prevTime, ' ms\\n')\n  }\n\n  print (...values: any) {\n    let val: string = ''\n    for (let i = 0; i < values.length; i++) {\n      val += values[i].toString()\n    }\n\n    this.$data.consoleText += val\n  }\n\n  clear () {\n    this.consoleText = 'console:\\n'\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=05cf7592&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n"],"sourceRoot":""}